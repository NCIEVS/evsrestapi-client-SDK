import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'java'
    id 'org.openapi.generator'
    id 'maven-publish'
}

group = 'gov.nih.nci.evs.api'
version = '0.0.1-SNAPSHOT'

// Input Specification locations
def inputURL = 'https://api-evsrest.nci.nih.gov/v3/api-docs'
def inputFile = '$projectDir/src/evs-swagger.yaml'

repositories {
    mavenCentral()
}

sourceCompatibility = 17
targetCompatibility = 17

dependencies {
    testImplementation platform(Testing.junit.bom)
    testImplementation Testing.junit.jupiter
}

test {
    useJUnitPlatform()
}

/**
 * Builds a Java client by default: https://openapi-generator.tech/docs/generators/java/
 * Before the code is generated, all previous code in the src folder is deleted with the `cleanJavaSdk` task*/
tasks.register('buildJavaSdk', GenerateTask) {
    generatorName.set("java")
    remoteInputSpec.set(inputURL)
    //inputSpec.set(inputFile)
    outputDir.set("$buildDir/java")
    apiPackage.set("gov.nih.nci.evs.api")
    invokerPackage.set("gov.nih.nci.evs.api.invoker")
    modelPackage.set("gov.nih.nci.evs.api.model")
    configOptions.set([
        dateLibrary: "java8",
    ])
}

tasks.register('buildPythonSdk', GenerateTask) {
    generatorName.set("python")
    remoteInputSpec.set(inputURL)
    //inputSpec.set(inputFile)
    outputDir.set("$buildDir/python")
    apiPackage.set("gov.nih.nci.evs.api")
    invokerPackage.set("gov.nih.nci.evs.api.invoker")
    modelPackage.set("gov.nih.nci.evs.api.models")
    configOptions.set([
        dateLibrary: "python3",
        packageName: "python-examples",
    ])
}

tasks.register('buildPythonSdk', GenerateTask) {
    generatorName.set("python")
    remoteInputSpec.set(inputURL)
    //inputSpec.set(inputFile)
    outputDir.set("$buildDir/python")
    apiPackage.set("gov.nih.nci.evs.api")
    invokerPackage.set("gov.nih.nci.evs.api.invoker")
    modelPackage.set("gov.nih.nci.evs.api.models")
    configOptions.set([
        dateLibrary: "python3",
        packageName: "python-examples",
    ])
}


/** Runs all code-gen tasks for each language to generate the clients */
tasks.register("buildClients") {
    dependsOn("buildJavaSdk",
                "buildPythonSdk",
//            "buildGoSdk",
//            "buildKotlinSdk",
//            "buildBashSdk",
//            "buildTypescriptSdk"
    )
    doLast {
        println 'All client sdk generated. They can be found in the code-gen/build folder.'
    }
}

compileJava.dependsOn tasks.named("buildJavaSdk")
build.dependsOn('buildClients')
publishToMavenLocal.dependsOn = ["buildJavaSdk`",
                                 "buildPythonSdk",
//                                 "buildGoSdk",
//                                 "buildKotlinSdk",
//                                 "buildBashSdk",
//                                 "buildTypescriptSdk"
]
