/*
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * The version of the OpenAPI document: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package gov.nih.nci.evs.api;

import gov.nih.nci.evs.api.invoker.ApiException;
import gov.nih.nci.evs.api.model.Concept;
import gov.nih.nci.evs.api.model.ConceptMinimal;
import gov.nih.nci.evs.api.model.RestException;
import gov.nih.nci.evs.api.model.Terminology;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MetadataEndpointsApi
 */
@Disabled
public class MetadataEndpointsApiTest {

    private final MetadataEndpointsApi api = new MetadataEndpointsApi();

    /**
     * Get the association for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssociationTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getAssociation(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get all associations (or those specified by list parameter) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAssociationsTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getAssociations(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get all concept status values for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConceptStatusesTest() throws ApiException {
        String terminology = null;
        List<String> response = api.getConceptStatuses(terminology);
        // TODO: test validations
    }

    /**
     * Get all definition sources for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefinitionSourcesTest() throws ApiException {
        String terminology = null;
        List<ConceptMinimal> response = api.getDefinitionSources(terminology);
        // TODO: test validations
    }

    /**
     * Get the definition type for the specified terminology and code/name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefinitionTypeTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getDefinitionType(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get all definition types (or those specified by list parameter) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDefinitionTypesTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getDefinitionTypes(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get all properties (or those specified by list parameter) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertiesTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getProperties(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get the property for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPropertyTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getProperty(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get the qualifier for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQualifierTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getQualifier(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get qualifier values for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQualifierValuesTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        List<String> response = api.getQualifierValues(terminology, codeOrName);
        // TODO: test validations
    }

    /**
     * Get all qualifiers (properties on properties) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQualifiersTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getQualifiers(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get the role for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRoleTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getRole(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get all roles (or those specified by list parameter) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRolesTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getRoles(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get the subset for the specified terminology and code.
     *
     * This endpoint will be deprecated in v2 in favor of top level subset endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubset1Test() throws ApiException {
        String terminology = null;
        String code = null;
        String include = null;
        Concept response = api.getSubset1(terminology, code, include);
        // TODO: test validations
    }

    /**
     * Get all subsets (or those specified by list parameter) for the specified terminology.
     *
     * This endpoint will be deprecated in v2 in favor of top level subset endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubsets1Test() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getSubsets1(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get all synonym sources for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSynonymSourcesTest() throws ApiException {
        String terminology = null;
        List<ConceptMinimal> response = api.getSynonymSources(terminology);
        // TODO: test validations
    }

    /**
     * Get the synonym type for the specified terminology and code/name
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSynonymTypeTest() throws ApiException {
        String terminology = null;
        String codeOrName = null;
        String include = null;
        Concept response = api.getSynonymType(terminology, codeOrName, include);
        // TODO: test validations
    }

    /**
     * Get all synonym types (or those specified by list parameter) for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSynonymTypesTest() throws ApiException {
        String terminology = null;
        String include = null;
        String _list = null;
        List<Concept> response = api.getSynonymTypes(terminology, include, _list);
        // TODO: test validations
    }

    /**
     * Get all term types for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTermTypesTest() throws ApiException {
        String terminology = null;
        List<ConceptMinimal> response = api.getTermTypes(terminology);
        // TODO: test validations
    }

    /**
     * Get all available terminologies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTerminologiesTest() throws ApiException {
        Boolean latest = null;
        String tag = null;
        String terminology = null;
        List<Terminology> response = api.getTerminologies(latest, tag, terminology);
        // TODO: test validations
    }

    /**
     * Get welcome text for the specified terminology
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWelcomeTextTest() throws ApiException {
        String terminology = null;
        String response = api.getWelcomeText(terminology);
        // TODO: test validations
    }

}
