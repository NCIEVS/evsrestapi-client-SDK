/**
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * OpenAPI spec version: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Represents a node in a subtree rendering of the hierarchy
*/
export class HierarchyNode {
    /**
    * URI for this element in an rdf-based source file
    */
    'uri'?: string;
    /**
    * Used to indicate the total amount of data in cases where a limit is being applied
    */
    'ct'?: number;
    /**
    * Code of the hierarchy node
    */
    'code'?: string;
    /**
    * Code label for the hierarchy node
    */
    'label'?: string;
    /**
    * Indicates level of depth in the (respective) hierarchy
    */
    'level'?: number;
    /**
    * Indicates whether the code has children
    */
    'leaf'?: boolean;
    /**
    * Indicates whether the node has been expanded
    */
    'expanded'?: boolean;
    /**
    * Child nodes
    */
    'children'?: Array<HierarchyNode>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "uri",
            "baseName": "uri",
            "type": "string",
            "format": ""
        },
        {
            "name": "ct",
            "baseName": "ct",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "string",
            "format": ""
        },
        {
            "name": "label",
            "baseName": "label",
            "type": "string",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "leaf",
            "baseName": "leaf",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "expanded",
            "baseName": "expanded",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "children",
            "baseName": "children",
            "type": "Array<HierarchyNode>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return HierarchyNode.attributeTypeMap;
    }

    public constructor() {
    }
}

