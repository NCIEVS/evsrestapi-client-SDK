/**
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * OpenAPI spec version: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Qualifier } from '../models/Qualifier';
import { HttpFile } from '../http/http';

/**
* Represents a non-defining (in a logical sense) relationship between two concepts
*/
export class Association {
    /**
    * URI for this element in an rdf-based source file
    */
    'uri'?: string;
    /**
    * Used to indicate the total amount of data in cases where a limit is being applied
    */
    'ct'?: number;
    /**
    * Relationship type
    */
    'type'?: string;
    /**
    * Related code (the code on the other side of the relationship)
    */
    'relatedCode'?: string;
    /**
    * Preferred name of the related code
    */
    'relatedName'?: string;
    /**
    * Relationship source
    */
    'source'?: string;
    /**
    * Used by search calls to provide information for highlighting a view of results
    */
    'highlight'?: string;
    /**
    * Type/value qualifiers on the relationship
    */
    'qualifiers'?: Array<Qualifier>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "uri",
            "baseName": "uri",
            "type": "string",
            "format": ""
        },
        {
            "name": "ct",
            "baseName": "ct",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedCode",
            "baseName": "relatedCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedName",
            "baseName": "relatedName",
            "type": "string",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string",
            "format": ""
        },
        {
            "name": "highlight",
            "baseName": "highlight",
            "type": "string",
            "format": ""
        },
        {
            "name": "qualifiers",
            "baseName": "qualifiers",
            "type": "Array<Qualifier>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Association.attributeTypeMap;
    }

    public constructor() {
    }
}

