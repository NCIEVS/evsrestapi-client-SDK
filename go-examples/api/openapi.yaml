openapi: 3.0.1
info:
  contact:
    email: NCIAppSupport@nih.gov
    name: NCI EVS
  description: "Endpoints to support searching, metadata, and content retrieval for\
    \ EVS terminologies. To learn more about how to interact with this api, see the\
    \ <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK\
    \ project.</a>"
  termsOfService: https://evs.nci.nih.gov/ftp1/NCI_Thesaurus/ThesaurusTermsofUse.htm
  title: NCI EVS Rest API
  version: 1.7.2.RELEASE
servers:
- url: http://localhost:8082/
paths:
  /api/v1/sparql/{terminology}:
    post:
      description: Perform a SPARQL query for a specified terminology.
      operationId: getSparqlBindings
      parameters:
      - description: "Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"\
          https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: SPARQL query to execute on the graph for the specified terminology.
          <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/SPARQL.md'
          target='_blank'>See here for more information and examples of using SPARQL
          with EVSRESTAPI</a>.
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapResultList'
          description: Successfully retrieved the requested information
      summary: Get SPARQL query results
      tags:
      - Search endpoint
  /api/v1/concept/{terminology}/search:
    get:
      description: "Use cases for search range from very simple term searches, use\
        \ of paging parameters, additional filters, searches properties, roles, and\
        \ associations, and so on.  To further explore the range of search options,\
        \ take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK'\
        \ target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>."
      operationId: searchSingleTerminology
      parameters:
      - description: "Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"\
          https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: "The match type, one of: contains, match, startsWith, phrase,\
          \ AND, OR, fuzzy."
        example: contains
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of concept status values to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>. This parameter is only meaningful
          for <i>terminology=ncit</i>.</p>
        explode: true
        in: query
        name: conceptStatus
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of properties to restrict search results\
          \ by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE'\
          \ for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties'\
          \ target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a\
          \ href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for\
          \ a list of NCI Metathesaurus properties</a>.</p> The properties can be\
          \ specified as code or name. NOTE: This feature works with <i>value</i>\
          \ to find concepts having one of the specified properties with an exact\
          \ value matching the <i>value</i> parameter.  Using a <i>term</i> will further\
          \ restrict results to those also matching the term."
        explode: true
        in: query
        name: property
        required: false
        schema:
          type: string
        style: form
      - description: "A property value to restrict search results by.  NOTE: This\
          \ feature works with <i>property</i> to find concepts having one of the\
          \ specified properties with an exact value matching this parameter.  Using\
          \ a <i>term</i> will further restrict results to those also matching the\
          \ term."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of definition sources to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: definitionSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of definition types to restrict search\
          \ results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>.\
          \ <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: definitionType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym sources to restrict search results
          by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of synonym types to restrict search results\
          \ by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: synonymType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym term type values to restrict
          search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymTermType
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of subsets to restrict search results by,\
          \ e.g. 'C157225'. The value '*' can also be used to return results that\
          \ participate in at least one subset. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>"
        explode: true
        in: query
        name: subset
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResultList'
          description: Successfully retrieved the requested information
      summary: Get concept search results for a specified terminology
      tags:
      - Search endpoint
    post:
      description: "Use cases for search range from very simple term searches, use\
        \ of paging parameters, additional filters, searches properties, roles, and\
        \ associations, and so on.  To further explore the range of search options,\
        \ take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK'\
        \ target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>."
      operationId: searchSingleTerminologySparql
      parameters:
      - description: "Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"\
          https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: "The match type, one of: contains, match, startsWith, phrase,\
          \ AND, OR, fuzzy."
        example: contains
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of concept status values to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>. This parameter is only meaningful
          for <i>terminology=ncit</i>.</p>
        explode: true
        in: query
        name: conceptStatus
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of properties to restrict search results\
          \ by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE'\
          \ for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties'\
          \ target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a\
          \ href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for\
          \ a list of NCI Metathesaurus properties</a>.</p> The properties can be\
          \ specified as code or name. NOTE: This feature works with <i>value</i>\
          \ to find concepts having one of the specified properties with an exact\
          \ value matching the <i>value</i> parameter.  Using a <i>term</i> will further\
          \ restrict results to those also matching the term."
        explode: true
        in: query
        name: property
        required: false
        schema:
          type: string
        style: form
      - description: "A property value to restrict search results by.  NOTE: This\
          \ feature works with <i>property</i> to find concepts having one of the\
          \ specified properties with an exact value matching this parameter.  Using\
          \ a <i>term</i> will further restrict results to those also matching the\
          \ term."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of definition sources to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: definitionSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of definition types to restrict search\
          \ results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>.\
          \ <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: definitionType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym sources to restrict search results
          by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of synonym types to restrict search results\
          \ by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: synonymType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym term type values to restrict
          search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymTermType
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of subsets to restrict search results by,\
          \ e.g. 'C157225'. The value '*' can also be used to return results that\
          \ participate in at least one subset. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>"
        explode: true
        in: query
        name: subset
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        description: SPARQL query that returns ?code identifying a valid code in the
          specified terminology. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/SPARQL.md'
          target='_blank'>See here for more information and examples of using SPARQL
          with EVSRESTAPI</a>.
        required: true
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResultList'
          description: Successfully retrieved the requested information
      summary: Get concept search results for a specified terminology
      tags:
      - Search endpoint
  /api/v1/version:
    get:
      operationId: getApplicationVersion
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVersion'
          description: Successfully retrieved the requested information
      summary: Get the application version information
      tags:
      - Application version endpoint
  /api/v1/subset/{terminology}:
    get:
      operationId: getSubsets
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return subsets for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all subsets (or those specified by list parameter) for the specified
        terminology
      tags:
      - Subset endpoints
  /api/v1/subset/{terminology}/{code}:
    get:
      operationId: getSubset
      parameters:
      - description: "Terminology, e.g. 'ncit'."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Subset code, e.g. 'C116978' for <i>ncit</i>. This call is only\
          \ meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data tc return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the subset for the specified terminology and code.
      tags:
      - Subset endpoints
  /api/v1/subset/{terminology}/{code}/members:
    get:
      operationId: getSubsetMembers
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          type: string
        style: form
      - description: Max number of results to return
        example: 10000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - description: "Code for a subset concept in the specified terminology, e.g.\
          \ 'C157225' for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get subset members for the specified terminology and code. Concept
        subset endpoints will be deprecated in v2 in favor of top level subset endpoints.
      tags:
      - Subset endpoints
  /api/v1/rewrite:
    get:
      operationId: rewriteUrl
      parameters:
      - explode: true
        in: query
        name: url
        required: true
        schema:
          type: string
        style: form
      responses:
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Internal server error
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Successfully retrieved the requested information
      summary: Rewrite the specified LexEVS URL to EVS Explore
      tags:
      - Application version endpoint
  /api/v1/metadata/{terminology}/welcomeText:
    get:
      operationId: getWelcomeText
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Successfully retrieved the requested information
      summary: Get welcome text for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/termTypes:
    get:
      operationId: getTermTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all term types for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/synonymTypes:
    get:
      operationId: getSynonymTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return synonym types for (or leave\
          \ blank for all).  If invalid values are passed, the result will simply\
          \ include no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all synonym types (or those specified by list parameter) for the
        specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/synonymType/{codeOrName}:
    get:
      operationId: getSynonymType
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Synonym type code (or name), e.g.<ul><li>'P90' or 'FULL_SYN'\
          \ for <i>ncit</i></li><li>'Preferred_Name' or 'Preferred name' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the synonym type for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/synonymSources:
    get:
      operationId: getSynonymSources
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all synonym sources for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/subsets:
    get:
      description: This endpoint will be deprecated in v2 in favor of top level subset
        endpoints.
      operationId: getSubsets_1
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return subsets for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all subsets (or those specified by list parameter) for the specified
        terminology.
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/subset/{code}:
    get:
      description: This endpoint will be deprecated in v2 in favor of top level subset
        endpoints.
      operationId: getSubset_1
      parameters:
      - description: "Terminology, e.g. 'ncit'."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Subset code, e.g. 'C116978' for <i>ncit</i>. This call is only\
          \ meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data tc return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the subset for the specified terminology and code.
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/stats/{source}:
    get:
      description: This endpoint is mostly for NCIm to make source overlap statistics
        available.
      operationId: getSourceStats
      parameters:
      - description: "Terminology, e.g. 'ncit'."
        example: ncim
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "terminology source code, e.g. 'LNC' for <i>ncim</i>."
        explode: false
        in: path
        name: source
        required: true
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  items:
                    $ref: '#/components/schemas/StatisticsEntry'
                  type: array
                type: object
          description: Successfully retrieved the requested information
      summary: Get statistics for the source within the specified terminology.
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/roles:
    get:
      operationId: getRoles
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return roles for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all roles (or those specified by list parameter) for the specified
        terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/role/{codeOrName}:
    get:
      operationId: getRole
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Role code (or name), e.g. 'R123' or 'Chemotherapy_Regimen_Has_Component'\
          \ for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the role for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/qualifiers:
    get:
      operationId: getQualifiers
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: List of codes or labels to return qualifiers for (or leave blank
          for all)
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all qualifiers (properties on properties) for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/qualifier/{codeOrName}:
    get:
      operationId: getQualifier
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Qualifier code (or name), e.g.<ul><li>'P390' or 'go-source'\
          \ for <i>ncit</i></li><li>'RG' or 'Relationship group' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the qualifier for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/qualifier/{codeOrName}/values:
    get:
      operationId: getQualifierValues
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Qualifier code (or name), e.g.<ul><li>'P390' or 'go-source'\
          \ for <i>ncit</i></li><li>'RG' or 'Relationship group' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Successfully retrieved the requested information
      summary: Get qualifier values for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/property/{codeOrName}:
    get:
      operationId: getProperty
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Property code (or name), e.g. <ul><li>'P216' or 'BioCarta_ID'\
          \ for <i>ncit</i></li><li>'BioCarta_ID' or ''BioCarta ID' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the property for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/properties:
    get:
      operationId: getProperties
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return properties for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all properties (or those specified by list parameter) for the specified
        terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/definitionTypes:
    get:
      operationId: getDefinitionTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return definition types for (or leave\
          \ blank for all).  If invalid values are passed, the result will simply\
          \ include no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all definition types (or those specified by list parameter) for
        the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/definitionType/{codeOrName}:
    get:
      operationId: getDefinitionType
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Definition type code (or name), e.g.<ul><li>'P325' or 'DEFINITION'\
          \ for <i>ncit</i></li><li>'DEFINITION' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the definition type for the specified terminology and code/name.
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/definitionSources:
    get:
      operationId: getDefinitionSources
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all definition sources for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/conceptStatuses:
    get:
      operationId: getConceptStatuses
      parameters:
      - description: "Terminology, e.g. 'ncit'. This call is only meaningful for <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Successfully retrieved the requested information
      summary: Get all concept status values for the specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/associations:
    get:
      operationId: getAssociations
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return associations for (or leave\
          \ blank for all). If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all associations (or those specified by list parameter) for the
        specified terminology
      tags:
      - Metadata endpoints
  /api/v1/metadata/{terminology}/association/{codeOrName}:
    get:
      operationId: getAssociation
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Association code (or name), e.g. <ul><li>'A10' or 'Has_CDRH_Parent'\
          \ for <i>ncit</i></li><li>'RB' or 'has a broader relationship' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the association for the specified terminology and code/name
      tags:
      - Metadata endpoints
  /api/v1/metadata/terminologies:
    get:
      operationId: getTerminologies
      parameters:
      - description: Return terminologies with matching <i>latest</i> value. e.g.
          true or false
        example: true
        explode: true
        in: query
        name: latest
        required: false
        schema:
          type: boolean
        style: form
      - description: Return terminologies with matching tag. e.g. 'monthly' or 'weekly'
          for <i>ncit</i>
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Return entries with matching terminology, e.g. 'ncit' or 'ncim'\
          \ (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        explode: true
        in: query
        name: terminology
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Terminology'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all available terminologies
      tags:
      - Metadata endpoints
  /api/v1/mapset:
    get:
      operationId: getMapsets
      parameters:
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all mapsets (no terminology parameter is needed as mapsets connect
        codes in one terminology to another)
      tags:
      - Mapset endpoints
  /api/v1/mapset/{code}:
    get:
      operationId: getMapsetByCode
      parameters:
      - description: Mapset code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the mapset for the specified code (no terminology parameter is
        needed as mapsets connect codes in one terminology to another)
      tags:
      - Mapset endpoints
  /api/v1/mapset/{code}/maps:
    get:
      operationId: getMapsetMappingsByCode
      parameters:
      - description: Mapset code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptMapResultList'
          description: Successfully retrieved the requested information
      summary: Get the maps for the mapset specified by the code (no terminology parameter
        is needed as mapsets connect codes in one terminology to another)
      tags:
      - Mapset endpoints
  /api/v1/history/{terminology}/{code}/replacements:
    get:
      operationId: getReplacements
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C4654' for\
          \ <i>ncit</i></li><li>'C0000733' for <i>ncim</i></li></ul>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/History'
                type: array
          description: Successfully retrieved the requested information
      summary: Gets suggested replacements for a specified terminology and retired
        code. Active codes will return entries as well with an action of "active".
      tags:
      - History endpoints
  /api/v1/history/{terminology}/replacements:
    get:
      operationId: getReplacementsFromList
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma-separated list of codes, e.g. <ul><li>'C4654,C40117' for\
          \ <i>ncit</i></li><li>'C0000733,C3551741' for <i>ncim</i></li></ul>."
        explode: true
        in: query
        name: list
        required: true
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/History'
                type: array
          description: Successfully retrieved the requested information
      summary: Gets suggested replacements for a specified terminology and a comma-separated
        list of retired codes.  Active codes will return entries as well with an action
        of "active".
      tags:
      - History endpoints
  /api/v1/concept/{terminology}:
    get:
      operationId: getConcepts
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List (comma-separated) of codes to return concepts for, e.g.<ul><li>'C2291,C3224'\
          \ for <i>ncit</i></li><li>'C0010137,C0025202' for <i>ncim</i></li></ul>"
        explode: true
        in: query
        name: list
        required: true
        schema:
          type: string
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get concepts specified by list parameter
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}:
    get:
      operationId: getConcept
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g.<ul><li>'C3224' for <i>ncit</i></li><li>'C0025202'\
          \ for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), elements\
          \ of the concept should be limited to that specified number of entries.\
          \ Thus a user interface can quickly retrieve initial data for a concept\
          \ (even with <i>include=full</i>) and then call back for more data. An extra\
          \ placeholder entry with just a <i>ct</i> field will be included to indicate\
          \ the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the concept for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/subtree:
    get:
      operationId: getSubtree
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), subtrees\
          \ and siblings at each level will be limited to the specified number of\
          \ entries. Thus a user interface can quickly retrieve initial data for a\
          \ subtree and then call back for more data. An extra placeholder entry with\
          \ just a <i>ct</i> field will be included to indicate the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HierarchyNode'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the entire subtree from the root node to the specified code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/subtree/children:
    get:
      operationId: getSubtreeChildren
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), children\
          \ will be limited to the specified number of entries. Thus a user interface\
          \ can quickly retrieve initial data for a subtree and then call back for\
          \ more data. An extra placeholder entry with just a <i>ct</i> field will\
          \ be included to indicate the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HierarchyNode'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the entire subtree from the root node to the specified code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/roles:
    get:
      operationId: getRoles_1
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Successfully retrieved the requested information
      summary: Get roles for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/pathsToRoot:
    get:
      operationId: getPathsToRoot
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths to the hierarchy root from the specified code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/pathsToAncestor/{ancestorCode}:
    get:
      operationId: getPathsToAncestor
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Ancestor code of the other specified code, e.g. 'C2991' for\
          \ <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: ancestorCode
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths from the specified code to the specified ancestor code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/pathsFromRoot:
    get:
      operationId: getPathsFromRoot
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths from the hierarchy root to the specified concept.
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/parents:
    get:
      operationId: getParents
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get parent concepts for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/maps:
    get:
      operationId: getMaps
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMap'
                type: array
          description: Successfully retrieved the requested information
      summary: Get maps for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/inverseRoles:
    get:
      operationId: getInverseRoles
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \  This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Successfully retrieved the requested information
      summary: Get inverse roles for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/inverseAssociations:
    get:
      operationId: getInverseAssociations
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g.<ul><li>'C3224' for <i>ncit</i></li><li>'C0025202'\
          \ for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: Successfully retrieved the requested information
      summary: Get inverse associations for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/history:
    get:
      operationId: getHistory
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i> and <i>ncim</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get history for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/disjointWith:
    get:
      operationId: getDisjointWith
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3910' for <i>ncit</i>.\
          \  This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisjointWith'
                type: array
          description: Successfully retrieved the requested information
      summary: Get "disjoint with" info for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/descendants:
    get:
      operationId: getDescendants
      parameters:
      - description: "Terminology, e.g. 'ncit''"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 50000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max level of results to return
        example: 10000
        explode: true
        in: query
        name: maxLevel
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get descendant concepts for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/children:
    get:
      operationId: getChildren
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get child concepts for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/{code}/associations:
    get:
      operationId: getAssociations_1
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the associations for the specified terminology and code
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/subsetMembers/{code}:
    get:
      description: This endpoint will be deprecated in v2 in favor of a top level
        subset member endpoint.
      operationId: getSubsetMembers_1
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Code for a subset concept in the specified terminology, e.g.\
          \ 'C157225' for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get subset members for the specified terminology and code.
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/roots:
    get:
      operationId: getRoots
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get root concepts for the specified terminology
      tags:
      - Concept endpoints
  /api/v1/concept/{terminology}/associations/{codeOrLabel}:
    get:
      operationId: getAssociationEntries
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code/label in the specified terminology, e.g. 'A5' or 'Has_Salt_Form'\
          \ for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: codeOrLabel
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationEntryResultList'
          description: Successfully retrieved the requested information
      summary: Get the association entries for the specified terminology and code.
        Associations used to define subset membership are not resolved by this call
      tags:
      - Concept endpoints
  /api/v1/concept/search:
    get:
      description: "Use cases for search range from very simple term searches, use\
        \ of paging parameters, additional filters, searches properties, roles, and\
        \ associations, and so on.  To further explore the range of search options,\
        \ take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK'\
        \ target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>."
      operationId: search
      parameters:
      - description: Required license information for restricted terminologies. <a
          href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md'
          target='_blank'>See here for detailed information</a>.
        explode: false
        in: header
        name: X-EVSRESTAPI-License-Key
        required: false
        schema:
          type: string
        style: simple
      - description: "Comma-separated list of terminologies to search, e.g. 'ncit'\
          \ or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\"\
          >See here for complete list</a>)"
        example: ncit
        explode: true
        in: query
        name: terminology
        required: false
        schema:
          type: string
        style: form
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: "The match type, one of: contains, match, startsWith, phrase,\
          \ AND, OR, fuzzy."
        example: contains
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of concept status values to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>. This parameter is only meaningful
          for <i>terminology=ncit</i>.</p>
        explode: true
        in: query
        name: conceptStatus
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of properties to restrict search results\
          \ by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE'\
          \ for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties'\
          \ target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a\
          \ href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for\
          \ a list of NCI Metathesaurus properties</a>.</p> The properties can be\
          \ specified as code or name. NOTE: This feature works with <i>value</i>\
          \ to find concepts having one of the specified properties with an exact\
          \ value matching the <i>value</i> parameter.  Using a <i>term</i> will further\
          \ restrict results to those also matching the term."
        explode: true
        in: query
        name: property
        required: false
        schema:
          type: string
        style: form
      - description: "A property value to restrict search results by.  NOTE: This\
          \ feature works with <i>property</i> to find concepts having one of the\
          \ specified properties with an exact value matching this parameter.  Using\
          \ a <i>term</i> will further restrict results to those also matching the\
          \ term."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of definition sources to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: definitionSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of definition types to restrict search\
          \ results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>.\
          \ <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: definitionType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym sources to restrict search results
          by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of synonym types to restrict search results\
          \ by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: synonymType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym term type values to restrict
          search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymTermType
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of subsets to restrict search results by,\
          \ e.g. 'C157225'. The value '*' can also be used to return results that\
          \ participate in at least one subset. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>"
        explode: true
        in: query
        name: subset
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResultList'
          description: Successfully retrieved the requested information
      summary: Get concept search results
      tags:
      - Search endpoint
components:
  schemas:
    RestException:
      description: Payload for JSON error responses
      example:
        path: path
        error: error
        message: message
        timestamp: 2000-01-23T04:56:07.000+00:00
        status: 0
      properties:
        timestamp:
          format: date-time
          type: string
        status:
          format: int32
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
      type: object
    MapResultList:
      description: Represents a list of objects returned from a find call
      example:
        ct: 6
        timeTaken: 5
        total: 1
        uri: uri
        parameters:
          include: include
          pageSize: 7
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 2
          sort: sort
          codeList:
          - codeList
          - codeList
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          sparql: sparql
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
        results:
        - key: results
        - key: results
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        total:
          description: Total nubmer of results (if paging is not considered)
          format: int64
          type: integer
        timeTaken:
          description: Total time taken to compute the result
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        results:
          description: Search criteria used to arrive at this result
          items:
            additionalProperties:
              description: Search criteria used to arrive at this result
              type: string
            description: Search criteria used to arrive at this result
            type: object
          type: array
      type: object
    SearchCriteria:
      description: Criteria for a search or find operation
      example:
        include: include
        pageSize: 7
        definitionSource:
        - definitionSource
        - definitionSource
        fromRecord: 2
        sort: sort
        codeList:
        - codeList
        - codeList
        type: type
        ascending: true
        uri: uri
        definitionType:
        - definitionType
        - definitionType
        ct: 5
        synonymSource:
        - synonymSource
        - synonymSource
        terminology:
        - terminology
        - terminology
        property:
        - property
        - property
        synonymType:
        - synonymType
        - synonymType
        term: term
        conceptStatus:
        - conceptStatus
        - conceptStatus
        sparql: sparql
        value: value
        synonymTermType:
        - synonymTermType
        - synonymTermType
        subset:
        - subset
        - subset
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        term:
          description: "Search term, e.g. 'heart', or 'C3224'"
          type: string
        type:
          description: "The match type, one of: contains, match, startsWith, phrase,\
            \ AND, OR, fuzzy"
          type: string
        include:
          description: "Include parameter value, e.g. 'minimal', 'summary', 'synonyms,properties,children'"
          type: string
        sort:
          description: Sort field
          type: string
        ascending:
          description: "Indicates whether sort is ascending (true), descending (false),\
            \ or not specified (null)"
          type: boolean
        fromRecord:
          description: Start index of the search results
          format: int32
          type: integer
        pageSize:
          description: Max number of results to return
          format: int32
          type: integer
        conceptStatus:
          description: Comma-separated list of concept status values to restrict search
            results by
          items:
            description: Comma-separated list of concept status values to restrict
              search results by
            type: string
          type: array
        property:
          description: Comma-separated list of properties to restrict search results
            by
          items:
            description: Comma-separated list of properties to restrict search results
              by
            type: string
          type: array
        value:
          description: A property value to restrict search results by
          type: string
        synonymSource:
          description: Comma-separated list of synonym sources to restrict search
            results by
          items:
            description: Comma-separated list of synonym sources to restrict search
              results by
            type: string
          type: array
        synonymType:
          description: Comma-separated list of synonym types to restrict search results
            by
          items:
            description: Comma-separated list of synonym types to restrict search
              results by
            type: string
          type: array
        definitionSource:
          description: Comma-separated list of definition sources to restrict search
            results by
          items:
            description: Comma-separated list of definition sources to restrict search
              results by
            type: string
          type: array
        definitionType:
          description: Comma-separated list of definition types to restrict search
            results by
          items:
            description: Comma-separated list of definition types to restrict search
              results by
            type: string
          type: array
        synonymTermType:
          description: Comma-separated list of synonym term types to restrict search
            results by
          items:
            description: Comma-separated list of synonym term types to restrict search
              results by
            type: string
          type: array
        subset:
          description: "Comma-separated list of subsets to restrict search results\
            \ by, e.g. 'C157225'"
          items:
            description: "Comma-separated list of subsets to restrict search results\
              \ by, e.g. 'C157225'"
            type: string
          type: array
        codeList:
          description: "Comma-separated list of concept codes to restrict search results\
            \ by, e.g. 'C157225'"
          items:
            description: "Comma-separated list of concept codes to restrict search\
              \ results by, e.g. 'C157225'"
            type: string
          type: array
        terminology:
          description: Comma-separated list of terminologies to search
          items:
            description: Comma-separated list of terminologies to search
            type: string
          type: array
        sparql:
          description: "SPARQL query, only available as an output parameter"
          type: string
      type: object
    Association:
      description: Represents a non-defining (in a logical sense) relationship between
        two concepts
      example:
        ct: 2
        highlight: highlight
        relatedName: relatedName
        relatedCode: relatedCode
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        type:
          description: Relationship type
          type: string
        relatedCode:
          description: Related code (the code on the other side of the relationship)
          type: string
        relatedName:
          description: Preferred name of the related code
          type: string
        source:
          description: Relationship source
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        qualifiers:
          description: Type/value qualifiers on the relationship
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    Concept:
      description: Represents a concept in a terminology
      example:
        associations:
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        code: code
        roles:
        - ct: 4
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 4
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        source: source
        descendants:
        - null
        - null
        highlight: highlight
        inverseRoles:
        - ct: 4
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 4
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        terminology: terminology
        children:
        - null
        - null
        conceptStatus: conceptStatus
        definitions:
        - ct: 9
          highlight: highlight
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          definition: definition
          source: source
          type: type
          uri: uri
        - ct: 9
          highlight: highlight
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          definition: definition
          source: source
          type: type
          uri: uri
        mapsetLink: mapsetLink
        maps:
        - targetName: targetName
          sourceLoaded: true
          sourceTerminologyVersion: sourceTerminologyVersion
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          mapsetCode: mapsetCode
          type: type
          uri: uri
          targetTerminology: targetTerminology
          target: target
          ct: 1
          sourceCode: sourceCode
          targetLoaded: true
          sourceTerminology: sourceTerminology
          sortKey: sortKey
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        - targetName: targetName
          sourceLoaded: true
          sourceTerminologyVersion: sourceTerminologyVersion
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          mapsetCode: mapsetCode
          type: type
          uri: uri
          targetTerminology: targetTerminology
          target: target
          ct: 1
          sourceCode: sourceCode
          targetLoaded: true
          sourceTerminology: sourceTerminology
          sortKey: sortKey
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        level: 5
        synonyms:
        - ct: 2
          highlight: highlight
          code: code
          subSource: subSource
          name: name
          termType: termType
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          active: true
          source: source
          type: type
          uri: uri
        - ct: 2
          highlight: highlight
          code: code
          subSource: subSource
          name: name
          termType: termType
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          active: true
          source: source
          type: type
          uri: uri
        active: true
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        history:
        - date: date
          ct: 1
          code: code
          replacementName: replacementName
          name: name
          action: action
          replacementCode: replacementCode
          uri: uri
        - date: date
          ct: 1
          code: code
          replacementName: replacementName
          name: name
          action: action
          replacementCode: replacementCode
          uri: uri
        leaf: true
        uri: uri
        version: version
        ct: 5
        inverseAssociations:
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        disjointWith:
        - ct: 7
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 7
          highlight: highlight
          relatedName: relatedName
          relatedCode: relatedCode
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        paths:
          ct: 1
          paths:
          - ct: 6
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 4
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 4
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 7
          - ct: 6
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 4
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 4
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 7
          uri: uri
        name: name
        subsetLink: subsetLink
        properties:
        - ct: 3
          highlight: highlight
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          value: value
        - ct: 3
          highlight: highlight
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          value: value
        parents:
        - null
        - null
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        code:
          description: Code (unique identifier) for this meaning
          type: string
        name:
          description: Preferred name for the code
          type: string
        terminology:
          description: "Terminology abbreviation, e.g. 'nci'"
          type: string
        version:
          description: "Terminology version, e.g. '23.11d'"
          type: string
        level:
          description: Level of depth in a hierarchy (when this object is used to
            represent an element in a path)
          format: int32
          type: integer
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        subsetLink:
          description: "Link to download data for a subset, used when the concept\
            \ represents subset metadata"
          type: string
        mapsetLink:
          description: Metadata for downloading a mapset
          type: string
        conceptStatus:
          description: "Status value for the concept, e.g. Retired_Concept"
          type: string
        source:
          description: Associations from this concept to other ones
          type: string
        leaf:
          description: Indicates whether concept is a leaf node
          type: boolean
        active:
          description: Indicates whether the concept is active
          type: boolean
        synonyms:
          description: "Synonyms, or all of the names for this concept, including\
            \ the preferred name"
          items:
            $ref: '#/components/schemas/Synonym'
          type: array
        definitions:
          description: Text definitions
          items:
            $ref: '#/components/schemas/Definition'
          type: array
        properties:
          description: Key/value properties
          items:
            $ref: '#/components/schemas/Property'
          type: array
        children:
          description: Child concepts in the hierarchy
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        parents:
          description: Parent concepts in the hierarchy
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        descendants:
          description: Descendant concepts in the hierarchy
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        qualifiers:
          description: Qualifiers for use when a concept is used as a parent/child
            - to indicate RELA for NCIm-derived content
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        associations:
          description: Associations from this concept to other ones
          items:
            $ref: '#/components/schemas/Association'
          type: array
        inverseAssociations:
          description: Associations to this concept from other ones
          items:
            $ref: '#/components/schemas/Association'
          type: array
        roles:
          description: Roles from this concept to other ones
          items:
            $ref: '#/components/schemas/Role'
          type: array
        disjointWith:
          description: Assertions of disjointness with respect to other concepts
          items:
            $ref: '#/components/schemas/DisjointWith'
          type: array
        inverseRoles:
          description: Roles to this concept from other ones
          items:
            $ref: '#/components/schemas/Role'
          type: array
        history:
          description: History records
          items:
            $ref: '#/components/schemas/History'
          type: array
        maps:
          description: Maps from this concept to concepts in other terminologies
          items:
            $ref: '#/components/schemas/ConceptMap'
          type: array
        paths:
          $ref: '#/components/schemas/Paths'
      type: object
    ConceptMap:
      description: Represents a map from a concept to concepts in other terminologies
      example:
        targetName: targetName
        sourceLoaded: true
        sourceTerminologyVersion: sourceTerminologyVersion
        targetCode: targetCode
        sourceTermType: sourceTermType
        rule: rule
        source: source
        mapsetCode: mapsetCode
        type: type
        uri: uri
        targetTerminology: targetTerminology
        target: target
        ct: 1
        sourceCode: sourceCode
        targetLoaded: true
        sourceTerminology: sourceTerminology
        sortKey: sortKey
        rank: rank
        targetTerminologyVersion: targetTerminologyVersion
        sourceName: sourceName
        targetTermGroup: targetTermGroup
        group: group
        targetTermType: targetTermType
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        mapsetCode:
          type: string
        source:
          description: "Terminology of the source code, e.g. 'ncit'"
          type: string
        sourceName:
          description: Preferred name of the source code
          type: string
        sourceTermType:
          description: Term type of the source code
          type: string
        sourceCode:
          description: Source code of the map (the thing being mapped 'from')
          type: string
        sourceTerminology:
          description: "Human-readable label for the terminology of the source code,\
            \ e.g. 'NCI Thesaurus'"
          type: string
        sourceTerminologyVersion:
          description: Terminology version of the source code
          type: string
        sourceLoaded:
          description: Indicates whether the source code terminology/version is currently
            loaded
          type: boolean
        type:
          type: string
        rank:
          type: string
        group:
          type: string
        rule:
          type: string
        target:
          description: "Terminology of the target code, e.g. 'ncit'"
          type: string
        targetName:
          type: string
        targetTermType:
          type: string
        targetCode:
          description: Target code of the map (the thing being mapped 'to')
          type: string
        targetTerminology:
          description: "Human-readable label for the terminology of the target code,\
            \ e.g. 'NCI Thesaurus'"
          type: string
        targetTerminologyVersion:
          description: Terminology version of the target code
          type: string
        targetLoaded:
          description: Indicates whether the target terminology/version is currently
            loaded
          type: boolean
        sortKey:
          type: string
        targetTermGroup:
          type: string
          writeOnly: true
      type: object
    ConceptMinimal:
      description: Represents minimal information about a concept in a terminology
      example:
        ct: 1
        code: code
        terminology: terminology
        level: 4
        name: name
        uri: uri
        version: version
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        code:
          description: Code (unique identifier) for this meaning
          type: string
        name:
          description: Preferred name for the code
          type: string
        terminology:
          description: "Terminology abbreviation, e.g. 'nci'"
          type: string
        version:
          description: "Terminology version, e.g. '23.11d'"
          type: string
        level:
          description: Level of depth in a hierarchy (when this object is used to
            represent an element in a path)
          format: int32
          type: integer
      type: object
    ConceptResultList:
      description: Represents a list of concepts returned from a search or find call
      example:
        ct: 0
        timeTaken: 1
        total: 6
        concepts:
        - associations:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          code: code
          roles:
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          source: source
          descendants:
          - null
          - null
          highlight: highlight
          inverseRoles:
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          terminology: terminology
          children:
          - null
          - null
          conceptStatus: conceptStatus
          definitions:
          - ct: 9
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          mapsetLink: mapsetLink
          maps:
          - targetName: targetName
            sourceLoaded: true
            sourceTerminologyVersion: sourceTerminologyVersion
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            mapsetCode: mapsetCode
            type: type
            uri: uri
            targetTerminology: targetTerminology
            target: target
            ct: 1
            sourceCode: sourceCode
            targetLoaded: true
            sourceTerminology: sourceTerminology
            sortKey: sortKey
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          - targetName: targetName
            sourceLoaded: true
            sourceTerminologyVersion: sourceTerminologyVersion
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            mapsetCode: mapsetCode
            type: type
            uri: uri
            targetTerminology: targetTerminology
            target: target
            ct: 1
            sourceCode: sourceCode
            targetLoaded: true
            sourceTerminology: sourceTerminology
            sortKey: sortKey
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          level: 5
          synonyms:
          - ct: 2
            highlight: highlight
            code: code
            subSource: subSource
            name: name
            termType: termType
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            active: true
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            code: code
            subSource: subSource
            name: name
            termType: termType
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            active: true
            source: source
            type: type
            uri: uri
          active: true
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          history:
          - date: date
            ct: 1
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          - date: date
            ct: 1
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          leaf: true
          uri: uri
          version: version
          ct: 5
          inverseAssociations:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          disjointWith:
          - ct: 7
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 7
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          paths:
            ct: 1
            paths:
            - ct: 6
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 7
            - ct: 6
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 7
            uri: uri
          name: name
          subsetLink: subsetLink
          properties:
          - ct: 3
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          - ct: 3
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          parents:
          - null
          - null
        - associations:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          code: code
          roles:
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          source: source
          descendants:
          - null
          - null
          highlight: highlight
          inverseRoles:
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 4
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          terminology: terminology
          children:
          - null
          - null
          conceptStatus: conceptStatus
          definitions:
          - ct: 9
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          mapsetLink: mapsetLink
          maps:
          - targetName: targetName
            sourceLoaded: true
            sourceTerminologyVersion: sourceTerminologyVersion
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            mapsetCode: mapsetCode
            type: type
            uri: uri
            targetTerminology: targetTerminology
            target: target
            ct: 1
            sourceCode: sourceCode
            targetLoaded: true
            sourceTerminology: sourceTerminology
            sortKey: sortKey
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          - targetName: targetName
            sourceLoaded: true
            sourceTerminologyVersion: sourceTerminologyVersion
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            mapsetCode: mapsetCode
            type: type
            uri: uri
            targetTerminology: targetTerminology
            target: target
            ct: 1
            sourceCode: sourceCode
            targetLoaded: true
            sourceTerminology: sourceTerminology
            sortKey: sortKey
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          level: 5
          synonyms:
          - ct: 2
            highlight: highlight
            code: code
            subSource: subSource
            name: name
            termType: termType
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            active: true
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            code: code
            subSource: subSource
            name: name
            termType: termType
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            active: true
            source: source
            type: type
            uri: uri
          active: true
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          history:
          - date: date
            ct: 1
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          - date: date
            ct: 1
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          leaf: true
          uri: uri
          version: version
          ct: 5
          inverseAssociations:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          disjointWith:
          - ct: 7
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 7
            highlight: highlight
            relatedName: relatedName
            relatedCode: relatedCode
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          paths:
            ct: 1
            paths:
            - ct: 6
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 7
            - ct: 6
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 4
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 7
            uri: uri
          name: name
          subsetLink: subsetLink
          properties:
          - ct: 3
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          - ct: 3
            highlight: highlight
            qualifiers:
            - ct: 7
              type: type
              uri: uri
              value: value
            - ct: 7
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          parents:
          - null
          - null
        uri: uri
        parameters:
          include: include
          pageSize: 7
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 2
          sort: sort
          codeList:
          - codeList
          - codeList
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          sparql: sparql
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        total:
          description: Total nubmer of results (if paging is not considered)
          format: int64
          type: integer
        timeTaken:
          description: Total time taken to compute the result
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        concepts:
          description: List of concepts
          items:
            $ref: '#/components/schemas/Concept'
          type: array
      type: object
    Definition:
      description: Represents a text definition for a concept
      example:
        ct: 9
        highlight: highlight
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        definition: definition
        source: source
        type: type
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        definition:
          description: Text definition value
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        type:
          description: Definition type
          type: string
        source:
          description: Definition source
          type: string
        qualifiers:
          description: Type/value qualifiers on the definition
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    DisjointWith:
      description: Represents an assertion of disjointness between two concepts
      example:
        ct: 7
        highlight: highlight
        relatedName: relatedName
        relatedCode: relatedCode
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        type:
          description: Relationship type
          type: string
        relatedCode:
          description: Related code (the code on the other side of the relationship)
          type: string
        relatedName:
          description: Preferred name of the related code
          type: string
        source:
          description: Relationship source
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        qualifiers:
          description: Type/value qualifiers on the relationship
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    History:
      description: "Represents a history record, generally for a retired concept"
      example:
        date: date
        ct: 1
        code: code
        replacementName: replacementName
        name: name
        action: action
        replacementCode: replacementCode
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        code:
          description: Code for this history record
          type: string
        name:
          description: Last known preferred name for the code
          type: string
        action:
          description: "Indicates the history action, e.g. 'merge', 'active', 'retire',\
            \ 'SY', 'RB', etc."
          type: string
        date:
          description: Date of the history record
          type: string
        replacementCode:
          description: Code replacing this code
          type: string
        replacementName:
          description: Preferred name of the code replacing this code
          type: string
      type: object
    Path:
      description: Represents a path (or partial path) in a hierarchy
      example:
        ct: 6
        concepts:
        - ct: 1
          code: code
          terminology: terminology
          level: 4
          name: name
          uri: uri
          version: version
        - ct: 1
          code: code
          terminology: terminology
          level: 4
          name: name
          uri: uri
          version: version
        uri: uri
        direction: 7
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        direction:
          description: "Direction of the map (1 means node-to-root, -1 means root-to-node)"
          format: int32
          type: integer
        concepts:
          description: Concepts on the path
          items:
            $ref: '#/components/schemas/ConceptMinimal'
          type: array
      type: object
    Paths:
      description: Represents a list of paths
      example:
        ct: 1
        paths:
        - ct: 6
          concepts:
          - ct: 1
            code: code
            terminology: terminology
            level: 4
            name: name
            uri: uri
            version: version
          - ct: 1
            code: code
            terminology: terminology
            level: 4
            name: name
            uri: uri
            version: version
          uri: uri
          direction: 7
        - ct: 6
          concepts:
          - ct: 1
            code: code
            terminology: terminology
            level: 4
            name: name
            uri: uri
            version: version
          - ct: 1
            code: code
            terminology: terminology
            level: 4
            name: name
            uri: uri
            version: version
          uri: uri
          direction: 7
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        paths:
          description: List of paths
          items:
            $ref: '#/components/schemas/Path'
          type: array
      type: object
    Property:
      description: Represents a type/value property on a concept
      example:
        ct: 3
        highlight: highlight
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
        value: value
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        type:
          description: Property type
          type: string
        value:
          description: Property value
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        qualifiers:
          description: Type/value qualifiers on the property
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        source:
          description: Property source
          type: string
      type: object
    Qualifier:
      description: Represents a type/value qualifier on a concept element
      example:
        ct: 7
        type: type
        uri: uri
        value: value
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        type:
          description: Qualifier type
          type: string
        value:
          description: Qualifier value
          type: string
      type: object
    Role:
      description: Represents a (logically) defining relationship between two concepts
      example:
        ct: 4
        highlight: highlight
        relatedName: relatedName
        relatedCode: relatedCode
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        type:
          description: Relationship type
          type: string
        relatedCode:
          description: Related code (the code on the other side of the relationship)
          type: string
        relatedName:
          description: Preferred name of the related code
          type: string
        source:
          description: Relationship source
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        qualifiers:
          description: Type/value qualifiers on the relationship
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    Synonym:
      description: Represents one of the (potentially many) names for a concept
      example:
        ct: 2
        highlight: highlight
        code: code
        subSource: subSource
        name: name
        termType: termType
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        active: true
        source: source
        type: type
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        name:
          description: Name for a concept
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        termType:
          description: Synonym term type
          type: string
        type:
          description: Synonym type
          type: string
        source:
          description: Synonym source
          type: string
        code:
          description: "Code of the synonym, used in particular for Metathesaurus\
            \ data where the source of the synonym is not the terminology itself"
          type: string
        subSource:
          description: Synonym sub-source
          type: string
        qualifiers:
          description: Type/value qualifiers on the synonym
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        active:
          description: Indicates whether the synonym is active
          type: boolean
      type: object
    ApplicationVersion:
      example:
        name: name
        description: description
        version: version
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
      type: object
    StatisticsEntry:
      description: Represents an entry in a statistics table
      properties:
        code:
          description: Code for what this statistic is measuring
          type: string
        key:
          description: Key defining an additional element to the statistic
          type: string
        value:
          description: Value of the statistic
          type: string
      type: object
    Terminology:
      description: Represents a terminology loaded into the API
      example:
        date: date
        metadata:
          uiLabel: uiLabel
          excludedProperties:
          - excludedProperties
          - excludedProperties
          synonymTermGroup: synonymTermGroup
          licenseText: licenseText
          loader: loader
          preferredTermGroups:
          - preferredTermGroups
          - preferredTermGroups
          hierarchy: true
          hierarchyRoles:
          - hierarchyRoles
          - hierarchyRoles
          welcomeText: welcomeText
          history: true
          uri: uri
          maxVersions: 1
          detailsColumns:
            key: true
          ct: 6
          termGroups:
            key: termGroups
          subsetLink: subsetLink
          retiredStatusValue: retiredStatusValue
          codeLabel: codeLabel
          sourceCt: 5
          metaConceptField: metaConceptField
          conceptStatuses:
          - conceptStatuses
          - conceptStatuses
        terminologyVersion: terminologyVersion
        indexName: indexName
        description: description
        uri: uri
        version: version
        graph: graph
        tags:
          key: tags
        ct: 0
        terminology: terminology
        name: name
        sparqlFlag: true
        objectIndexName: objectIndexName
        latest: true
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        terminology:
          description: "Terminology abbreviation, e.g. 'ncit'"
          type: string
        version:
          description: "Terminology version, e.g. '23.11d'"
          type: string
        date:
          description: Terminology publication/release date
          type: string
        name:
          description: Terminology name
          type: string
        description:
          description: Terminology description
          type: string
        graph:
          description: Name of the RDF triplestore graph if this data is backed by
            a triplestore
          type: string
        terminologyVersion:
          description: "Underscore-separated value for terminology and version used\
            \ by the API to precisely pinpoint a particular version, e.g. 'ncit_23.11d'"
          type: string
        latest:
          description: Indicates whether this is the latest version
          type: boolean
        tags:
          additionalProperties:
            description: Additional terminology tags
            type: string
          description: Additional terminology tags
          type: object
        indexName:
          description: for internal use
          type: string
        objectIndexName:
          description: for internal use
          type: string
        metadata:
          $ref: '#/components/schemas/TerminologyMetadata'
        sparqlFlag:
          description: Indicates whether the terminology can be used with SPARQL
          type: boolean
      type: object
    TerminologyMetadata:
      description: Represents additional terminology metadata
      example:
        uiLabel: uiLabel
        excludedProperties:
        - excludedProperties
        - excludedProperties
        synonymTermGroup: synonymTermGroup
        licenseText: licenseText
        loader: loader
        preferredTermGroups:
        - preferredTermGroups
        - preferredTermGroups
        hierarchy: true
        hierarchyRoles:
        - hierarchyRoles
        - hierarchyRoles
        welcomeText: welcomeText
        history: true
        uri: uri
        maxVersions: 1
        detailsColumns:
          key: true
        ct: 6
        termGroups:
          key: termGroups
        subsetLink: subsetLink
        retiredStatusValue: retiredStatusValue
        codeLabel: codeLabel
        sourceCt: 5
        metaConceptField: metaConceptField
        conceptStatuses:
        - conceptStatuses
        - conceptStatuses
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        uiLabel:
          description: Human-readable name for the terminology to use in a UI label
          type: string
        maxVersions:
          description: Max number of versions to keep at the same time
          format: int32
          type: integer
        loader:
          description: Label for the loader used to populate this data
          type: string
        conceptStatuses:
          description: Concept status values used by the terminology
          items:
            description: Concept status values used by the terminology
            type: string
          type: array
        excludedProperties:
          items:
            type: string
          type: array
          uniqueItems: true
        retiredStatusValue:
          description: Concept status value for retired concepts
          type: string
        detailsColumns:
          additionalProperties:
            description: Metadata for displaying concept
            type: boolean
          description: Metadata for displaying concept
          type: object
        hierarchy:
          description: Indicates whether or not the terminology has a hierarchy
          type: boolean
        hierarchyRoles:
          description: Indicates role codes that are reinterpreted as parent/child
          items:
            description: Indicates role codes that are reinterpreted as parent/child
            type: string
          type: array
          uniqueItems: true
        history:
          description: Indicates whether or not the terminology has history records
          type: boolean
        sourceCt:
          description: Count of included sources
          format: int32
          type: integer
        subsetLink:
          description: Metadata for downloading a subset
          type: string
        licenseText:
          description: License text for the UI
          type: string
        metaConceptField:
          description: Metadata for concept display
          type: string
        codeLabel:
          description: Metadata for concept display
          type: string
        welcomeText:
          description: Metadata for landing page welcome text
          type: string
        preferredTermGroups:
          items:
            type: string
          type: array
          writeOnly: true
        synonymTermGroup:
          type: string
          writeOnly: true
        termGroups:
          additionalProperties:
            type: string
          type: object
          writeOnly: true
      type: object
    ConceptMapResultList:
      description: Represents a list of maps returned from a search or find call
      example:
        ct: 0
        timeTaken: 1
        total: 6
        maps:
        - targetName: targetName
          sourceLoaded: true
          sourceTerminologyVersion: sourceTerminologyVersion
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          mapsetCode: mapsetCode
          type: type
          uri: uri
          targetTerminology: targetTerminology
          target: target
          ct: 1
          sourceCode: sourceCode
          targetLoaded: true
          sourceTerminology: sourceTerminology
          sortKey: sortKey
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        - targetName: targetName
          sourceLoaded: true
          sourceTerminologyVersion: sourceTerminologyVersion
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          mapsetCode: mapsetCode
          type: type
          uri: uri
          targetTerminology: targetTerminology
          target: target
          ct: 1
          sourceCode: sourceCode
          targetLoaded: true
          sourceTerminology: sourceTerminology
          sortKey: sortKey
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        uri: uri
        parameters:
          include: include
          pageSize: 7
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 2
          sort: sort
          codeList:
          - codeList
          - codeList
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          sparql: sparql
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        total:
          description: Total nubmer of results (if paging is not considered)
          format: int64
          type: integer
        timeTaken:
          description: Total time taken to compute the result
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        maps:
          description: List of maps
          items:
            $ref: '#/components/schemas/ConceptMap'
          type: array
      type: object
    HierarchyNode:
      description: Represents a node in a subtree rendering of the hierarchy
      example:
        ct: 0
        expanded: true
        code: code
        level: 6
        children:
        - null
        - null
        label: label
        leaf: true
        uri: uri
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        code:
          description: Code of the hierarchy node
          type: string
        label:
          description: Code label for the hierarchy node
          type: string
        level:
          description: Indicates level of depth in the (respective) hierarchy
          format: int32
          type: integer
        leaf:
          description: Indicates whether the code has children
          type: boolean
        expanded:
          description: Indicates whether the node has been expanded
          type: boolean
        children:
          description: Child nodes
          items:
            $ref: '#/components/schemas/HierarchyNode'
          type: array
      type: object
    AssociationEntry:
      description: Represents an entry in a table of associations between two concepts
      example:
        relatedName: relatedName
        code: code
        qualifiers:
        - ct: 7
          type: type
          uri: uri
          value: value
        - ct: 7
          type: type
          uri: uri
          value: value
        association: association
        source: source
        type: type
        uri: uri
        version: version
        ct: 5
        highlight: highlight
        terminology: terminology
        relatedCode: relatedCode
        name: name
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        code:
          description: Code on the 'from' side of the association
          type: string
        type:
          description: Relationship type
          type: string
        relatedCode:
          description: Code on the 'to' side of the association
          type: string
        relatedName:
          description: Preferred name of the related code
          type: string
        source:
          description: Relationship source
          type: string
        highlight:
          description: Used by search calls to provide information for highlighting
            a view of results
          type: string
        qualifiers:
          description: Type/value qualifiers on the relationship
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        terminology:
          description: "Terminology abbreviation, e.g. 'nci'"
          type: string
        version:
          description: "Terminology version, e.g. '23.11d'"
          type: string
        association:
          description: Type of relationship between code and related code
          type: string
        name:
          description: Preferred name of the code
          type: string
      type: object
    AssociationEntryResultList:
      example:
        ct: 0
        timeTaken: 1
        total: 6
        associationEntries:
        - relatedName: relatedName
          code: code
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          association: association
          source: source
          type: type
          uri: uri
          version: version
          ct: 5
          highlight: highlight
          terminology: terminology
          relatedCode: relatedCode
          name: name
        - relatedName: relatedName
          code: code
          qualifiers:
          - ct: 7
            type: type
            uri: uri
            value: value
          - ct: 7
            type: type
            uri: uri
            value: value
          association: association
          source: source
          type: type
          uri: uri
          version: version
          ct: 5
          highlight: highlight
          terminology: terminology
          relatedCode: relatedCode
          name: name
        uri: uri
        parameters:
          include: include
          pageSize: 7
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 2
          sort: sort
          codeList:
          - codeList
          - codeList
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          sparql: sparql
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          description: URI for this element in an rdf-based source file
          type: string
        ct:
          description: Used to indicate the total amount of data in cases where a
            limit is being applied
          format: int32
          type: integer
        total:
          description: Total nubmer of results (if paging is not considered)
          format: int64
          type: integer
        timeTaken:
          description: Total time taken to compute the result
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        associationEntries:
          items:
            $ref: '#/components/schemas/AssociationEntry'
          type: array
      type: object
