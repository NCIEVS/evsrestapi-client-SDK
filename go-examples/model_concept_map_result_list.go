/*
NCI EVS Rest API

Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>

API version: 1.7.2.RELEASE
Contact: NCIAppSupport@nih.gov
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package evs

import (
	"encoding/json"
)

// checks if the ConceptMapResultList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConceptMapResultList{}

// ConceptMapResultList Represents a list of maps returned from a search or find call
type ConceptMapResultList struct {
	// URI for this element in an rdf-based source file
	Uri *string `json:"uri,omitempty"`
	// Used to indicate the total amount of data in cases where a limit is being applied
	Ct *int32 `json:"ct,omitempty"`
	// Total nubmer of results (if paging is not considered)
	Total *int64 `json:"total,omitempty"`
	// Total time taken to compute the result
	TimeTaken *int64 `json:"timeTaken,omitempty"`
	Parameters *SearchCriteria `json:"parameters,omitempty"`
	// List of maps
	Maps []ConceptMap `json:"maps,omitempty"`
}

// NewConceptMapResultList instantiates a new ConceptMapResultList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConceptMapResultList() *ConceptMapResultList {
	this := ConceptMapResultList{}
	return &this
}

// NewConceptMapResultListWithDefaults instantiates a new ConceptMapResultList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConceptMapResultListWithDefaults() *ConceptMapResultList {
	this := ConceptMapResultList{}
	return &this
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetUri() string {
	if o == nil || IsNil(o.Uri) {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetUriOk() (*string, bool) {
	if o == nil || IsNil(o.Uri) {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasUri() bool {
	if o != nil && !IsNil(o.Uri) {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *ConceptMapResultList) SetUri(v string) {
	o.Uri = &v
}

// GetCt returns the Ct field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetCt() int32 {
	if o == nil || IsNil(o.Ct) {
		var ret int32
		return ret
	}
	return *o.Ct
}

// GetCtOk returns a tuple with the Ct field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetCtOk() (*int32, bool) {
	if o == nil || IsNil(o.Ct) {
		return nil, false
	}
	return o.Ct, true
}

// HasCt returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasCt() bool {
	if o != nil && !IsNil(o.Ct) {
		return true
	}

	return false
}

// SetCt gets a reference to the given int32 and assigns it to the Ct field.
func (o *ConceptMapResultList) SetCt(v int32) {
	o.Ct = &v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetTotal() int64 {
	if o == nil || IsNil(o.Total) {
		var ret int64
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetTotalOk() (*int64, bool) {
	if o == nil || IsNil(o.Total) {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasTotal() bool {
	if o != nil && !IsNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int64 and assigns it to the Total field.
func (o *ConceptMapResultList) SetTotal(v int64) {
	o.Total = &v
}

// GetTimeTaken returns the TimeTaken field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetTimeTaken() int64 {
	if o == nil || IsNil(o.TimeTaken) {
		var ret int64
		return ret
	}
	return *o.TimeTaken
}

// GetTimeTakenOk returns a tuple with the TimeTaken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetTimeTakenOk() (*int64, bool) {
	if o == nil || IsNil(o.TimeTaken) {
		return nil, false
	}
	return o.TimeTaken, true
}

// HasTimeTaken returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasTimeTaken() bool {
	if o != nil && !IsNil(o.TimeTaken) {
		return true
	}

	return false
}

// SetTimeTaken gets a reference to the given int64 and assigns it to the TimeTaken field.
func (o *ConceptMapResultList) SetTimeTaken(v int64) {
	o.TimeTaken = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetParameters() SearchCriteria {
	if o == nil || IsNil(o.Parameters) {
		var ret SearchCriteria
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetParametersOk() (*SearchCriteria, bool) {
	if o == nil || IsNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasParameters() bool {
	if o != nil && !IsNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given SearchCriteria and assigns it to the Parameters field.
func (o *ConceptMapResultList) SetParameters(v SearchCriteria) {
	o.Parameters = &v
}

// GetMaps returns the Maps field value if set, zero value otherwise.
func (o *ConceptMapResultList) GetMaps() []ConceptMap {
	if o == nil || IsNil(o.Maps) {
		var ret []ConceptMap
		return ret
	}
	return o.Maps
}

// GetMapsOk returns a tuple with the Maps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConceptMapResultList) GetMapsOk() ([]ConceptMap, bool) {
	if o == nil || IsNil(o.Maps) {
		return nil, false
	}
	return o.Maps, true
}

// HasMaps returns a boolean if a field has been set.
func (o *ConceptMapResultList) HasMaps() bool {
	if o != nil && !IsNil(o.Maps) {
		return true
	}

	return false
}

// SetMaps gets a reference to the given []ConceptMap and assigns it to the Maps field.
func (o *ConceptMapResultList) SetMaps(v []ConceptMap) {
	o.Maps = v
}

func (o ConceptMapResultList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConceptMapResultList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Uri) {
		toSerialize["uri"] = o.Uri
	}
	if !IsNil(o.Ct) {
		toSerialize["ct"] = o.Ct
	}
	if !IsNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !IsNil(o.TimeTaken) {
		toSerialize["timeTaken"] = o.TimeTaken
	}
	if !IsNil(o.Parameters) {
		toSerialize["parameters"] = o.Parameters
	}
	if !IsNil(o.Maps) {
		toSerialize["maps"] = o.Maps
	}
	return toSerialize, nil
}

type NullableConceptMapResultList struct {
	value *ConceptMapResultList
	isSet bool
}

func (v NullableConceptMapResultList) Get() *ConceptMapResultList {
	return v.value
}

func (v *NullableConceptMapResultList) Set(val *ConceptMapResultList) {
	v.value = val
	v.isSet = true
}

func (v NullableConceptMapResultList) IsSet() bool {
	return v.isSet
}

func (v *NullableConceptMapResultList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConceptMapResultList(val *ConceptMapResultList) *NullableConceptMapResultList {
	return &NullableConceptMapResultList{value: val, isSet: true}
}

func (v NullableConceptMapResultList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConceptMapResultList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


