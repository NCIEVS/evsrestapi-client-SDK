# coding: utf-8

"""
    NCI EVS Rest API

    Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>

    The version of the OpenAPI document: 1.7.2.RELEASE
    Contact: NCIAppSupport@nih.gov
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.concept_result_list import ConceptResultList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class SearchEndpointApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def search(
        self,
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        terminology: Annotated[Optional[StrictStr], Field(description="Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ConceptResultList:
        """Get concept search results

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param terminology: Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)
        :type terminology: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_serialize(
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            terminology=terminology,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '404': "RestException",
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def search_with_http_info(
        self,
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        terminology: Annotated[Optional[StrictStr], Field(description="Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ConceptResultList]:
        """Get concept search results

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param terminology: Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)
        :type terminology: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_serialize(
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            terminology=terminology,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '404': "RestException",
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def search_without_preload_content(
        self,
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        terminology: Annotated[Optional[StrictStr], Field(description="Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get concept search results

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param terminology: Comma-separated list of terminologies to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)
        :type terminology: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_serialize(
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            terminology=terminology,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '404': "RestException",
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _search_serialize(
        self,
        x_evsrestapi_license_key,
        terminology,
        term,
        type,
        sort,
        ascending,
        include,
        from_record,
        page_size,
        concept_status,
        var_property,
        value,
        definition_source,
        definition_type,
        synonym_source,
        synonym_type,
        synonym_term_type,
        subset,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if terminology is not None:
            
            _query_params.append(('terminology', terminology))
            
        if term is not None:
            
            _query_params.append(('term', term))
            
        if type is not None:
            
            _query_params.append(('type', type))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if ascending is not None:
            
            _query_params.append(('ascending', ascending))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if from_record is not None:
            
            _query_params.append(('fromRecord', from_record))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        if concept_status is not None:
            
            _query_params.append(('conceptStatus', concept_status))
            
        if var_property is not None:
            
            _query_params.append(('property', var_property))
            
        if value is not None:
            
            _query_params.append(('value', value))
            
        if definition_source is not None:
            
            _query_params.append(('definitionSource', definition_source))
            
        if definition_type is not None:
            
            _query_params.append(('definitionType', definition_type))
            
        if synonym_source is not None:
            
            _query_params.append(('synonymSource', synonym_source))
            
        if synonym_type is not None:
            
            _query_params.append(('synonymType', synonym_type))
            
        if synonym_term_type is not None:
            
            _query_params.append(('synonymTermType', synonym_term_type))
            
        if subset is not None:
            
            _query_params.append(('subset', subset))
            
        # process the header parameters
        if x_evsrestapi_license_key is not None:
            _header_params['X-EVSRESTAPI-License-Key'] = x_evsrestapi_license_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v1/concept/search',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def search_single_terminology(
        self,
        terminology: Annotated[StrictStr, Field(description="Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")],
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ConceptResultList:
        """Get concept search results for a specified terminology

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param terminology: Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>) (required)
        :type terminology: str
        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_single_terminology_serialize(
            terminology=terminology,
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def search_single_terminology_with_http_info(
        self,
        terminology: Annotated[StrictStr, Field(description="Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")],
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ConceptResultList]:
        """Get concept search results for a specified terminology

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param terminology: Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>) (required)
        :type terminology: str
        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_single_terminology_serialize(
            terminology=terminology,
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def search_single_terminology_without_preload_content(
        self,
        terminology: Annotated[StrictStr, Field(description="Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>)")],
        x_evsrestapi_license_key: Annotated[Optional[StrictStr], Field(description="Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.")] = None,
        term: Annotated[Optional[StrictStr], Field(description="The term, phrase, or code to be searched, e.g. 'melanoma'")] = None,
        type: Annotated[Optional[StrictStr], Field(description="The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.")] = None,
        sort: Annotated[Optional[StrictStr], Field(description="The search parameter to sort results by")] = None,
        ascending: Annotated[Optional[StrictBool], Field(description="Sort ascending (if true) or descending (if false)")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.")] = None,
        from_record: Annotated[Optional[StrictInt], Field(description="Start index of the search results")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="Max number of results to return")] = None,
        concept_status: Annotated[Optional[StrictStr], Field(description="Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        var_property: Annotated[Optional[StrictStr], Field(description="Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        value: Annotated[Optional[StrictStr], Field(description="A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.")] = None,
        definition_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        definition_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_source: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        synonym_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>")] = None,
        synonym_term_type: Annotated[Optional[StrictStr], Field(description="Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>")] = None,
        subset: Annotated[Optional[StrictStr], Field(description="Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get concept search results for a specified terminology

        Use cases for search range from very simple term searches, use of paging parameters, additional filters, searches properties, roles, and associations, and so on.  To further explore the range of search options, take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK' target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>.

        :param terminology: Single terminology to search, e.g. 'ncit' or 'ncim' (<a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/TERMINOLOGIES.md\">See here for complete list</a>) (required)
        :type terminology: str
        :param x_evsrestapi_license_key: Required license information for restricted terminologies. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/LICENSE.md' target='_blank'>See here for detailed information</a>.
        :type x_evsrestapi_license_key: str
        :param term: The term, phrase, or code to be searched, e.g. 'melanoma'
        :type term: str
        :param type: The match type, one of: contains, match, startsWith, phrase, AND, OR, fuzzy.
        :type type: str
        :param sort: The search parameter to sort results by
        :type sort: str
        :param ascending: Sort ascending (if true) or descending (if false)
        :type ascending: bool
        :param include: Indicator of how much data to return. Comma-separated list of any of the following values: minimal, summary, full, associations, children, definitions, disjointWith, history, inverseAssociations, inverseRoles, maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md' target='_blank'>See here for detailed information</a>.
        :type include: str
        :param from_record: Start index of the search results
        :type from_record: int
        :param page_size: Max number of results to return
        :type page_size: int
        :param concept_status: Comma-separated list of concept status values to restrict search results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type concept_status: str
        :param var_property: Comma-separated list of properties to restrict search results by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE' for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties' target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for a list of NCI Metathesaurus properties</a>.</p> The properties can be specified as code or name. NOTE: This feature works with <i>value</i> to find concepts having one of the specified properties with an exact value matching the <i>value</i> parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type var_property: str
        :param value: A property value to restrict search results by.  NOTE: This feature works with <i>property</i> to find concepts having one of the specified properties with an exact value matching this parameter.  Using a <i>term</i> will further restrict results to those also matching the term.
        :type value: str
        :param definition_source: Comma-separated list of definition sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type definition_source: str
        :param definition_type: Comma-separated list of definition types to restrict search results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>. <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type definition_type: str
        :param synonym_source: Comma-separated list of synonym sources to restrict search results by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_source: str
        :param synonym_type: Comma-separated list of synonym types to restrict search results by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>. This parameter is only meaningful for <i>terminology=ncit</i>.</p>
        :type synonym_type: str
        :param synonym_term_type: Comma-separated list of synonym term type values to restrict search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes' target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        :type synonym_term_type: str
        :param subset: Comma-separated list of subsets to restrict search results by, e.g. 'C157225'. The value '*' can also be used to return results that participate in at least one subset. This parameter is only meaningful for <i>terminology=ncit</i>
        :type subset: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._search_single_terminology_serialize(
            terminology=terminology,
            x_evsrestapi_license_key=x_evsrestapi_license_key,
            term=term,
            type=type,
            sort=sort,
            ascending=ascending,
            include=include,
            from_record=from_record,
            page_size=page_size,
            concept_status=concept_status,
            var_property=var_property,
            value=value,
            definition_source=definition_source,
            definition_type=definition_type,
            synonym_source=synonym_source,
            synonym_type=synonym_type,
            synonym_term_type=synonym_term_type,
            subset=subset,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '417': "RestException",
            '400': "RestException",
            '200': "ConceptResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _search_single_terminology_serialize(
        self,
        terminology,
        x_evsrestapi_license_key,
        term,
        type,
        sort,
        ascending,
        include,
        from_record,
        page_size,
        concept_status,
        var_property,
        value,
        definition_source,
        definition_type,
        synonym_source,
        synonym_type,
        synonym_term_type,
        subset,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if terminology is not None:
            _path_params['terminology'] = terminology
        # process the query parameters
        if term is not None:
            
            _query_params.append(('term', term))
            
        if type is not None:
            
            _query_params.append(('type', type))
            
        if sort is not None:
            
            _query_params.append(('sort', sort))
            
        if ascending is not None:
            
            _query_params.append(('ascending', ascending))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if from_record is not None:
            
            _query_params.append(('fromRecord', from_record))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        if concept_status is not None:
            
            _query_params.append(('conceptStatus', concept_status))
            
        if var_property is not None:
            
            _query_params.append(('property', var_property))
            
        if value is not None:
            
            _query_params.append(('value', value))
            
        if definition_source is not None:
            
            _query_params.append(('definitionSource', definition_source))
            
        if definition_type is not None:
            
            _query_params.append(('definitionType', definition_type))
            
        if synonym_source is not None:
            
            _query_params.append(('synonymSource', synonym_source))
            
        if synonym_type is not None:
            
            _query_params.append(('synonymType', synonym_type))
            
        if synonym_term_type is not None:
            
            _query_params.append(('synonymTermType', synonym_term_type))
            
        if subset is not None:
            
            _query_params.append(('subset', subset))
            
        # process the header parameters
        if x_evsrestapi_license_key is not None:
            _header_params['X-EVSRESTAPI-License-Key'] = x_evsrestapi_license_key
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        _header_params['Accept'] = self.api_client.select_header_accept(
            [
                'application/json'
            ]
        )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v1/concept/{terminology}/search',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


