/*
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * The version of the OpenAPI document: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package gov.nih.nci.evs.api;

import gov.nih.nci.evs.api.invoker.ApiException;
import gov.nih.nci.evs.api.model.Concept;
import gov.nih.nci.evs.api.model.MapResultList;
import gov.nih.nci.evs.api.model.RestException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MapsetEndpointsApi
 */
@Disabled
public class MapsetEndpointsApiTest {

    private final MapsetEndpointsApi api = new MapsetEndpointsApi();

    /**
     * Get the mapset for the specified code (no terminology parameter is needed as mapsets connect codes in one terminology to another)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapsetByCodeTest() throws ApiException {
        String code = null;
        String include = null;
        Concept response = api.getMapsetByCode(code, include);
        // TODO: test validations
    }

    /**
     * Get the maps for the mapset specified by the code (no terminology parameter is needed as mapsets connect codes in one terminology to another)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapsetMappingsByCodeTest() throws ApiException {
        String code = null;
        Integer fromRecord = null;
        Integer pageSize = null;
        String term = null;
        Boolean ascending = null;
        String sort = null;
        MapResultList response = api.getMapsetMappingsByCode(code, fromRecord, pageSize, term, ascending, sort);
        // TODO: test validations
    }

    /**
     * Get all mapsets (no terminology parameter is needed as mapsets connect codes in one terminology to another)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMapsetsTest() throws ApiException {
        String include = null;
        List<Concept> response = api.getMapsets(include);
        // TODO: test validations
    }

}
