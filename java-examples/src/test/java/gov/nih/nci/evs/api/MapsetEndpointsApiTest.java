/*
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * The version of the OpenAPI document: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package gov.nih.nci.evs.api;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import gov.nih.nci.evs.api.invoker.ApiException;
import gov.nih.nci.evs.api.model.Concept;
import gov.nih.nci.evs.api.model.MapResultList;
import java.util.List;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * API tests for MapsetEndpointsApi These tests will demonstrate how to call the API and log the
 * information that is returned. The asserts are used to ensure that the data we are pulling align
 * with what is expected based on how we are modeling the information.
 *
 * <p>NOTE: the asserts may be subject to change as the data evolves over time. Updating the tests
 * to align with the data we expect may be needed.
 */
public class MapsetEndpointsApiTest {

  /* MapsetEndpoint api */
  private static MapsetEndpointsApi api = null;

  /* Logger */
  private static final Logger log = LoggerFactory.getLogger(ConceptEndpointsApiTest.class);

  /** Instantiate the MapsetEndpointsApi */
  @BeforeAll
  public static void beforeAll() {
    api = new MapsetEndpointsApi();
  }

  /**
   * Get the mapset for the specified code (no terminology parameter is needed as mapsets connect
   * codes in one terminology to another)
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getMapsetByCodeTest() throws ApiException {
    // ARRANGE
    String code = "NCIt_Maps_To_ICDO3";
    String include = "minimal";

    // ACT
    Concept response = api.getMapsetByCode(code, include);

    // ASSERT
    assertNotNull(response);

    // LOG
    log.info("Get mapset for code - NCIt_Maps_To_ICDO3");
    log.info(" mapset = " + response);
  }

  /**
   * Get the maps for the mapset mappings specified by the code (no terminology parameter is needed
   * as mapsets connect codes in one terminology to another)
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getMapsetMappingsByCodeTest() throws ApiException {
    // ARRANGE
    String code = "GO_to_NCIt_Mapping";
    Integer fromRecord = 0;
    Integer pageSize = 25;
    Boolean ascending = true;

    // ACT
    MapResultList response =
        api.getMapsetMappingsByCode(code, fromRecord, pageSize, null, ascending, null);

    // ASSERT
    assertNotNull(response);
    assertEquals(305, response.getTotal());

    // LOG
    log.info("Get mappings for mapsets by code");
    log.info("   mappings = " + response);
  }

  /**
   * Get all mapsets (no terminology parameter is needed as mapsets connect codes in one terminology
   * to another)
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getMapsetsTest() throws ApiException {
    // ARRANGE
    String include = "minimal";

    // ACT
    List<Concept> response = api.getMapsets(include);

    // ASSERT
    assertFalse(response.isEmpty());
    assertEquals(15, response.size());

    // LOG
    log.info("Get all mapsets");
    log.info("   mapsets = " + response);
  }
}
