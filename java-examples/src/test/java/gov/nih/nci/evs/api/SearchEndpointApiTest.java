/*
 * NCI EVS Rest API
 * Endpoints to support searching, metadata, and content retrieval for EVS terminologies. To learn more about how to interact with this api, see the <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK project.</a>
 *
 * The version of the OpenAPI document: 1.7.2.RELEASE
 * Contact: NCIAppSupport@nih.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package gov.nih.nci.evs.api;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import gov.nih.nci.evs.api.invoker.ApiException;
import gov.nih.nci.evs.api.model.ConceptResultList;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

/**
 * API tests for SearchEndpointApi. These tests will demonstrate how to call the API and log the
 * information that is returned. The asserts are used to ensure that the data we are pulling align
 * with what is expected based on how we are modeling the information.
 *
 * <p>NOTE: the asserts may be subject to change as the data evolves over time. Updating the tests
 * to align with the data we expect may be needed.
 */
public class SearchEndpointApiTest {

  /* Search api*/
  private static SearchEndpointApi api = null;

  /* Test terminology */
  private static final String terminology = "ncit";

  /* Logger */
  private static final Logger log = LoggerFactory.getLogger(ConceptEndpointsApiTest.class);

  /** Instantiate the SearchEndpointApi */
  @BeforeAll
  public static void beforeAll() {
    api = new SearchEndpointApi();
  }

  /**
   * Get concept search results
   *
   * <p>Use cases for search range from very simple term searches, use of paging parameters,
   * additional filters, searches properties, roles, and associations, and so on. To further explore
   * the range of search options, take a look at the &lt;a
   * href&#x3D;&#39;https://github.com/NCIEVS/evsrestapi-client-SDK&#39;
   * target&#x3D;&#39;_blank&#39;&gt;Github client SDK library created for the NCI EVS Rest
   * API&lt;/a&gt;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void searchTest() throws ApiException {
    // ARRANGE - using global variable unless otherwise listed
    String term = "melanoma";
    String type = "contains";
    Boolean ascending = true;
    String include = "minimal,children,definitions";
    Integer fromRecord = 0;
    Integer pageSize = 25;

    // ACT
    ConceptResultList response =
        api.search(
            terminology,
            term,
            type,
            null,
            ascending,
            include,
            fromRecord,
            pageSize,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null);

    // ASSERT
    assertNotNull(response);
    assertEquals(1464, response.getTotal());
    assertNotNull(response.getConcepts());
    assertNotNull(response.getConcepts().get(0));
    assertEquals("C3224", response.getConcepts().get(0).getCode());

    // LOG
    log.info("Get search results from NCIT for - Melanoma");
    log.info("   search results = " + response);
  }

  /**
   * Get concept search results for a specified terminology
   *
   * <p>Use cases for search range from very simple term searches, use of paging parameters,
   * additional filters, searches properties, roles, and associations, and so on. To further explore
   * the range of search options, take a look at the &lt;a
   * href&#x3D;&#39;https://github.com/NCIEVS/evsrestapi-client-SDK&#39;
   * target&#x3D;&#39;_blank&#39;&gt;Github client SDK library created for the NCI EVS Rest
   * API&lt;/a&gt;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void searchSingleTerminologyTest() throws ApiException {
    // ARRANGE - using global variable unless otherwise listed
    String term = "melanoma";
    Boolean ascending = false;
    String include = "minimal";
    Integer fromRecord = 0;
    Integer pageSize = 50;

    // ACT
    ConceptResultList response =
        api.searchSingleTerminology(
            terminology,
            term,
            null,
            null,
            ascending,
            include,
            fromRecord,
            pageSize,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null,
            null);

    // ASSERT
    assertNotNull(response);
    assertEquals(1464, response.getTotal());
    assertNotNull(response.getConcepts());
    assertNotNull(response.getConcepts().get(0));
    assertEquals("C3224", response.getConcepts().get(0).getCode());

    // LOG
    log.info("Get search results for specific term - melanoma");
    log.info("   search results = " + response);

  }
}
