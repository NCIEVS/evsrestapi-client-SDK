openapi: 3.0.1
info:
  contact:
    email: NCIAppSupport@nih.gov
    name: NCI EVS
  description: "Endpoints to support searching, metadata, and content retrieval for\
    \ EVS terminologies. To learn more about how to interact with this api, see the\
    \ <a href=\"https://github.com/NCIEVS/evsrestapi-client-SDK\">Github evsrestapi-client-SDK\
    \ project.</a>"
  termsOfService: https://evs.nci.nih.gov/ftp1/NCI_Thesaurus/ThesaurusTermsofUse.htm
  title: NCI EVS Rest API
  version: 1.7.2.RELEASE
servers:
- url: /
paths:
  /api/v1/version:
    get:
      operationId: getApplicationVersion
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationVersion'
          description: Successfully retrieved the requested information
      summary: Get the application version information
      tags:
      - Application version endpoint
      x-accepts: application/json
  /api/v1/subset/{terminology}/{code}/members:
    get:
      operationId: getSubsetMembers
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          type: string
        style: form
      - description: Max number of results to return
        example: 10000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: string
        style: form
      - description: "Code for a subset concept in the specified terminology, e.g.\
          \ 'C157225' for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get subset members for the specified terminology and code. Concept
        subset endpoints will be deprecated in v2 in favor of top level subset endpoints.
      tags:
      - Subset endpoints
      x-accepts: application/json
  /api/v1/subset/{terminology}/{code}:
    get:
      description: Get the subset for the specified terminology and code.
      operationId: getSubset
      parameters:
      - description: "Terminology, e.g. 'ncit'."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Subset code, e.g. 'C116978' for <i>ncit</i>. This call is only\
          \ meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data tc return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      tags:
      - Subset endpoints
      x-accepts: application/json
  /api/v1/subset/{terminology}:
    get:
      operationId: getSubsets
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return subsets for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all subsets (or those specified by list parameter) for the specified
        terminology
      tags:
      - Subset endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/welcomeText:
    get:
      operationId: getWelcomeText
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            text/html:
              schema:
                type: string
          description: Successfully retrieved the requested information
      summary: Get welcome text for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/termTypes:
    get:
      operationId: getTermTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all term types for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/synonymTypes:
    get:
      operationId: getSynonymTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return synonym types for (or leave\
          \ blank for all).  If invalid values are passed, the result will simply\
          \ include no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all synonym types (or those specified by list parameter) for the
        specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/synonymType/{codeOrName}:
    get:
      operationId: getSynonymType
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Synonym type code (or name), e.g.<ul><li>'P90' or 'FULL_SYN'\
          \ for <i>ncit</i></li><li>'Preferred_Name' or 'Preferred name' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the synonym type for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/synonymSources:
    get:
      operationId: getSynonymSources
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all synonym sources for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/subsets:
    get:
      description: This endpoint will be deprecated in v2 in favor of top level subset
        endpoints.
      operationId: getSubsets_1
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return subsets for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all subsets (or those specified by list parameter) for the specified
        terminology.
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/subset/{code}:
    get:
      description: This endpoint will be deprecated in v2 in favor of top level subset
        endpoints.
      operationId: getSubset_1
      parameters:
      - description: "Terminology, e.g. 'ncit'."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Subset code, e.g. 'C116978' for <i>ncit</i>. This call is only\
          \ meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data tc return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the subset for the specified terminology and code.
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/roles:
    get:
      operationId: getRoles
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return roles for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all roles (or those specified by list parameter) for the specified
        terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/role/{codeOrName}:
    get:
      operationId: getRole
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Role code (or name), e.g. 'R123' or 'Chemotherapy_Regimen_Has_Component'\
          \ for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the role for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/qualifiers:
    get:
      operationId: getQualifiers
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: List of codes or labels to return qualifiers for (or leave blank
          for all)
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all qualifiers (properties on properties) for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/qualifier/{codeOrName}/values:
    get:
      operationId: getQualifierValues
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Qualifier code (or name), e.g.<ul><li>'P390' or 'go-source'\
          \ for <i>ncit</i></li><li>'RG' or 'Relationship group' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Successfully retrieved the requested information
      summary: Get qualifier values for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/qualifier/{codeOrName}:
    get:
      operationId: getQualifier
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Qualifier code (or name), e.g.<ul><li>'P390' or 'go-source'\
          \ for <i>ncit</i></li><li>'RG' or 'Relationship group' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the qualifier for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/property/{codeOrName}:
    get:
      operationId: getProperty
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Property code (or name), e.g. <ul><li>'P216' or 'BioCarta_ID'\
          \ for <i>ncit</i></li><li>'BioCarta_ID' or ''BioCarta ID' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the property for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/properties:
    get:
      operationId: getProperties
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return properties for (or leave blank\
          \ for all).  If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all properties (or those specified by list parameter) for the specified
        terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/definitionTypes:
    get:
      operationId: getDefinitionTypes
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return definition types for (or leave\
          \ blank for all).  If invalid values are passed, the result will simply\
          \ include no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all definition types (or those specified by list parameter) for
        the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/definitionType/{codeOrName}:
    get:
      operationId: getDefinitionType
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Definition type code (or name), e.g.<ul><li>'P325' or 'DEFINITION'\
          \ for <i>ncit</i></li><li>'DEFINITION' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the definition type for the specified terminology and code/name.
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/definitionSources:
    get:
      operationId: getDefinitionSources
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ConceptMinimal'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all definition sources for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/conceptStatuses:
    get:
      operationId: getConceptStatuses
      parameters:
      - description: "Terminology, e.g. 'ncit'. This call is only meaningful for <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Successfully retrieved the requested information
      summary: Get all concept status values for the specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/associations:
    get:
      operationId: getAssociations
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List of codes or labels to return associations for (or leave\
          \ blank for all). If invalid values are passed, the result will simply include\
          \ no entries for those invalid values."
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all associations (or those specified by list parameter) for the
        specified terminology
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/{terminology}/association/{codeOrName}:
    get:
      operationId: getAssociation
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Association code (or name), e.g. <ul><li>'A10' or 'Has_CDRH_Parent'\
          \ for <i>ncit</i></li><li>'RB' or 'has a broader relationship' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: codeOrName
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the association for the specified terminology and code/name
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/metadata/terminologies:
    get:
      operationId: getTerminologies
      parameters:
      - description: Return terminologies with matching <i>latest</i> value. e.g.
          true or false
        example: true
        explode: true
        in: query
        name: latest
        required: false
        schema:
          type: boolean
        style: form
      - description: Return terminologies with matching tag. e.g. 'monthly' or 'weekly'
          for <i>ncit</i>
        explode: true
        in: query
        name: tag
        required: false
        schema:
          type: string
        style: form
      - description: "Return entries with matching terminology, e.g. 'ncit' or 'ncim'"
        explode: true
        in: query
        name: terminology
        required: false
        schema:
          type: string
        style: form
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Terminology'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all available terminologies
      tags:
      - Metadata endpoints
      x-accepts: application/json
  /api/v1/mapset/{code}/maps:
    get:
      operationId: getMapsetMappingsByCode
      parameters:
      - description: Mapset code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MapResultList'
          description: Successfully retrieved the requested information
      summary: Get the maps for the mapset specified by the code (no terminology parameter
        is needed as mapsets connect codes in one terminology to another)
      tags:
      - Mapset endpoints
      x-accepts: application/json
  /api/v1/mapset/{code}:
    get:
      operationId: getMapsetByCode
      parameters:
      - description: Mapset code
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the mapset for the specified code (no terminology parameter is
        needed as mapsets connect codes in one terminology to another)
      tags:
      - Mapset endpoints
      x-accepts: application/json
  /api/v1/mapset:
    get:
      operationId: getMapsets
      parameters:
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, inverseAssociations, inverseRoles, maps, parents,\
          \ properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get all mapsets (no terminology parameter is needed as mapsets connect
        codes in one terminology to another)
      tags:
      - Mapset endpoints
      x-accepts: application/json
  /api/v1/history/{terminology}/{code}/replacements:
    get:
      operationId: getReplacements
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C4654' for\
          \ <i>ncit</i></li><li>'C0000733' for <i>ncim</i></li></ul>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/History'
                type: array
          description: Successfully retrieved the requested information
      summary: Gets suggested replacements for a specified terminology and retired
        code. Active codes will return entries as well with an action of "active".
      tags:
      - History endpoints
      x-accepts: application/json
  /api/v1/history/{terminology}/replacements:
    get:
      operationId: getReplacementsFromList
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Comma-separated list of codes, e.g. <ul><li>'C4654,C40117' for\
          \ <i>ncit</i></li><li>'C0000733,C3551741' for <i>ncim</i></li></ul>."
        explode: true
        in: query
        name: list
        required: true
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/History'
                type: array
          description: Successfully retrieved the requested information
      summary: Gets suggested replacements for a specified terminology and a comma-separated
        list of retired codes.  Active codes will return entries as well with an action
        of "active".
      tags:
      - History endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/subtree/children:
    get:
      operationId: getSubtreeChildren
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), children\
          \ will be limited to the specified number of entries. Thus a user interface\
          \ can quickly retrieve initial data for a subtree and then call back for\
          \ more data. An extra placeholder entry with just a <i>ct</i> field will\
          \ be included to indicate the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HierarchyNode'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the entire subtree from the root node to the specified code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/subtree:
    get:
      operationId: getSubtree
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), subtrees\
          \ and siblings at each level will be limited to the specified number of\
          \ entries. Thus a user interface can quickly retrieve initial data for a\
          \ subtree and then call back for more data. An extra placeholder entry with\
          \ just a <i>ct</i> field will be included to indicate the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HierarchyNode'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the entire subtree from the root node to the specified code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/roles:
    get:
      operationId: getRoles_1
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Successfully retrieved the requested information
      summary: Get roles for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/pathsToRoot:
    get:
      operationId: getPathsToRoot
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths to the hierarchy root from the specified code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/pathsToAncestor/{ancestorCode}:
    get:
      operationId: getPathsToAncestor
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Ancestor code of the other specified code, e.g. 'C2991' for\
          \ <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: ancestorCode
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths from the specified code to the specified ancestor code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/pathsFromRoot:
    get:
      operationId: getPathsFromRoot
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>. For this call,\
          \ it is recommended to avoid using this parameter unless you need it for\
          \ a specific use case.  Any value other than 'minimal' may produce very\
          \ large payload results. "
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 100
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  items:
                    $ref: '#/components/schemas/Concept'
                  type: array
                type: array
          description: Successfully retrieved the requested information
      summary: Get paths from the hierarchy root to the specified concept.
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/parents:
    get:
      operationId: getParents
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get parent concepts for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/maps:
    get:
      operationId: getMaps
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Map'
                type: array
          description: Successfully retrieved the requested information
      summary: Get maps for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/inverseRoles:
    get:
      operationId: getInverseRoles
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \  This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Role'
                type: array
          description: Successfully retrieved the requested information
      summary: Get inverse roles for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/inverseAssociations:
    get:
      operationId: getInverseAssociations
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g.<ul><li>'C3224' for <i>ncit</i></li><li>'C0025202'\
          \ for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: Successfully retrieved the requested information
      summary: Get inverse associations for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/history:
    get:
      operationId: getHistory
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i> and <i>ncim</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get history for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/disjointWith:
    get:
      operationId: getDisjointWith
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3910' for <i>ncit</i>.\
          \  This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DisjointWith'
                type: array
          description: Successfully retrieved the requested information
      summary: Get "disjoint with" info for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/descendants:
    get:
      operationId: getDescendants
      parameters:
      - description: "Terminology, e.g. 'ncit''"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. 'C3224' for <i>ncit</i>.\
          \ This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 50000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max level of results to return
        example: 10000
        explode: true
        in: query
        name: maxLevel
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get descendant concepts for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/children:
    get:
      operationId: getChildren
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get child concepts for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}/associations:
    get:
      operationId: getAssociations_1
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g. <ul><li>'C3224' for\
          \ <i>ncit</i></li><li>'C0025202' for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      responses:
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: Successfully retrieved the requested information
      summary: Get the associations for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/{code}:
    get:
      operationId: getConcept
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code in the specified terminology, e.g.<ul><li>'C3224' for <i>ncit</i></li><li>'C0025202'\
          \ for <i>ncim</i></li></ul>"
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "If set to an integer (between <i>1</i> and <i>100</i>), elements\
          \ of the concept should be limited to that specified number of entries.\
          \ Thus a user interface can quickly retrieve initial data for a concept\
          \ (even with <i>include=full</i>) and then call back for more data. An extra\
          \ placeholder entry with just a <i>ct</i> field will be included to indicate\
          \ the total count."
        example: 100
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: summary
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Concept'
          description: Successfully retrieved the requested information
      summary: Get the concept for the specified terminology and code
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/subsetMembers/{code}:
    get:
      description: This endpoint will be deprecated in v2 in favor of a top level
        subset member endpoint.
      operationId: getSubsetMembers_1
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10000
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "Code for a subset concept in the specified terminology, e.g.\
          \ 'C157225' for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: code
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get subset members for the specified terminology and code.
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/search:
    get:
      description: "Use cases for search range from very simple term searches, use\
        \ of paging parameters, additional filters, searches properties, roles, and\
        \ associations, and so on.  To further explore the range of search options,\
        \ take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK'\
        \ target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>."
      operationId: searchSingleTerminology
      parameters:
      - description: "Single terminology to search, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: "The match type, one of: contains, match, startsWith, phrase,\
          \ AND, OR, fuzzy."
        example: contains
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of concept status values to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>. This parameter is only meaningful
          for <i>terminology=ncit</i>.</p>
        explode: true
        in: query
        name: conceptStatus
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of properties to restrict search results\
          \ by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE'\
          \ for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties'\
          \ target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a\
          \ href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for\
          \ a list of NCI Metathesaurus properties</a>.</p> The properties can be\
          \ specified as code or name. NOTE: This feature works with <i>value</i>\
          \ to find concepts having one of the specified properties with an exact\
          \ value matching the <i>value</i> parameter.  Using a <i>term</i> will further\
          \ restrict results to those also matching the term."
        explode: true
        in: query
        name: property
        required: false
        schema:
          type: string
        style: form
      - description: "A property value to restrict search results by.  NOTE: This\
          \ feature works with <i>property</i> to find concepts having one of the\
          \ specified properties with an exact value matching this parameter.  Using\
          \ a <i>term</i> will further restrict results to those also matching the\
          \ term."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of definition sources to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: definitionSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of definition types to restrict search\
          \ results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>.\
          \ <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: definitionType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym sources to restrict search results
          by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of synonym types to restrict search results\
          \ by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: synonymType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym term type values to restrict
          search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymTermType
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of subsets to restrict search results by,\
          \ e.g. 'C157225'. The value '*' can also be used to return results that\
          \ participate in at least one subset. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>"
        explode: true
        in: query
        name: subset
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResultList'
          description: Successfully retrieved the requested information
      summary: Get concept search results for a specified terminology
      tags:
      - Search endpoint
      x-accepts: application/json
  /api/v1/concept/{terminology}/roots:
    get:
      operationId: getRoots
      parameters:
      - description: "Terminology, e.g. 'ncit'.  This call is only meaningful for\
          \ <i>ncit</i>."
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get root concepts for the specified terminology
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}/associations/{codeOrLabel}:
    get:
      operationId: getAssociationEntries
      parameters:
      - description: "Terminology, e.g. 'ncit'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Code/label in the specified terminology, e.g. 'A5' or 'Has_Salt_Form'\
          \ for <i>ncit</i>. This call is only meaningful for <i>ncit</i>."
        explode: false
        in: path
        name: codeOrLabel
        required: true
        schema:
          type: string
        style: simple
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociationEntryResultList'
          description: Successfully retrieved the requested information
      summary: Get the association entries for the specified terminology and code.
        Associations used to define subset membership are not resolved by this call
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/{terminology}:
    get:
      operationId: getConcepts
      parameters:
      - description: "Terminology, e.g. 'ncit' or 'ncim'"
        example: ncit
        explode: false
        in: path
        name: terminology
        required: true
        schema:
          type: string
        style: simple
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: "List (comma-separated) of codes to return concepts for, e.g.<ul><li>'C2291,C3224'\
          \ for <i>ncit</i></li><li>'C0010137,C0025202' for <i>ncim</i></li></ul>"
        explode: true
        in: query
        name: list
        required: true
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Concept'
                type: array
          description: Successfully retrieved the requested information
      summary: Get concepts specified by list parameter
      tags:
      - Concept endpoints
      x-accepts: application/json
  /api/v1/concept/search:
    get:
      description: "Use cases for search range from very simple term searches, use\
        \ of paging parameters, additional filters, searches properties, roles, and\
        \ associations, and so on.  To further explore the range of search options,\
        \ take a look at the <a href='https://github.com/NCIEVS/evsrestapi-client-SDK'\
        \ target='_blank'>Github client SDK library created for the NCI EVS Rest API</a>."
      operationId: search
      parameters:
      - description: "Comma-separated list of terminologies to search, e.g. 'ncit'\
          \ or 'ncim'"
        example: ncit
        explode: true
        in: query
        name: terminology
        required: false
        schema:
          type: string
        style: form
      - description: "The term, phrase, or code to be searched, e.g. 'melanoma'"
        explode: true
        in: query
        name: term
        required: false
        schema:
          type: string
        style: form
      - description: "The match type, one of: contains, match, startsWith, phrase,\
          \ AND, OR, fuzzy."
        example: contains
        explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      - description: The search parameter to sort results by
        explode: true
        in: query
        name: sort
        required: false
        schema:
          type: string
        style: form
      - description: Sort ascending (if true) or descending (if false)
        explode: true
        in: query
        name: ascending
        required: false
        schema:
          type: boolean
        style: form
      - description: "Indicator of how much data to return. Comma-separated list of\
          \ any of the following values: minimal, summary, full, associations, children,\
          \ definitions, disjointWith, history, inverseAssociations, inverseRoles,\
          \ maps, parents, properties, roles, synonyms. <a href='https://github.com/NCIEVS/evsrestapi-client-SDK/blob/master/doc/INCLUDE.md'\
          \ target='_blank'>See here for detailed information</a>."
        example: minimal
        explode: true
        in: query
        name: include
        required: false
        schema:
          type: string
        style: form
      - description: Start index of the search results
        example: 0
        explode: true
        in: query
        name: fromRecord
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Max number of results to return
        example: 10
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Comma-separated list of concept status values to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/conceptStatuses' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>. This parameter is only meaningful
          for <i>terminology=ncit</i>.</p>
        explode: true
        in: query
        name: conceptStatus
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of properties to restrict search results\
          \ by (see also <i>value</i>). e.g.<ul><li>'P106,P322' for <i>terminology=ncit</i></li><li>'COLOR,SHAPE'\
          \ for <i>terminology=ncim</i></li></ul><p><a href='/api/v1/metadata/ncit/properties'\
          \ target='_blank'>Click here for a list of NCI Thesaurus properties</a>.</p><p><a\
          \ href='/api/v1/metadata/ncim/properties' target='_blank'>Click here for\
          \ a list of NCI Metathesaurus properties</a>.</p> The properties can be\
          \ specified as code or name. NOTE: This feature works with <i>value</i>\
          \ to find concepts having one of the specified properties with an exact\
          \ value matching the <i>value</i> parameter.  Using a <i>term</i> will further\
          \ restrict results to those also matching the term."
        explode: true
        in: query
        name: property
        required: false
        schema:
          type: string
        style: form
      - description: "A property value to restrict search results by.  NOTE: This\
          \ feature works with <i>property</i> to find concepts having one of the\
          \ specified properties with an exact value matching this parameter.  Using\
          \ a <i>term</i> will further restrict results to those also matching the\
          \ term."
        explode: true
        in: query
        name: value
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of definition sources to restrict search
          results by. <p><a href='/api/v1/metadata/ncit/definitionSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p><p><a href='/api/v1/metadata/ncim/definitionSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: definitionSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of definition types to restrict search\
          \ results by, e.g. 'DEFINITION,ALT_DEFINITION' for <i>terminology=ncit</i>.\
          \ <p><a href='/api/v1/metadata/ncit/definitionTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: definitionType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym sources to restrict search results
          by. <p><a href='/api/v1/metadata/ncit/synonymSources' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/synonymSources'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymSource
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of synonym types to restrict search results\
          \ by, e.g. 'FULL_SYN'. <p><a href='/api/v1/metadata/ncit/synonymTypes' target='_blank'>Click\
          \ here for a list of NCI Thesaurus values</a>. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>.</p>"
        explode: true
        in: query
        name: synonymType
        required: false
        schema:
          type: string
        style: form
      - description: Comma-separated list of synonym term type values to restrict
          search results by. <p><a href='/api/v1/metadata/ncit/termTypes' target='_blank'>Click
          here for a list of NCI Thesaurus values</a>.</p> <p><a href='/api/v1/metadata/ncim/termTypes'
          target='_blank'>Click here for a list of NCI Metathesaurus values</a>.</p>
        explode: true
        in: query
        name: synonymTermType
        required: false
        schema:
          type: string
        style: form
      - description: "Comma-separated list of subsets to restrict search results by,\
          \ e.g. 'C157225'. The value '*' can also be used to return results that\
          \ participate in at least one subset. This parameter is only meaningful\
          \ for <i>terminology=ncit</i>"
        explode: true
        in: query
        name: subset
        required: false
        schema:
          type: string
        style: form
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Bad request
        "417":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Expectation failed
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestException'
          description: Resource not found
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConceptResultList'
          description: Successfully retrieved the requested information
      summary: Get concept search results
      tags:
      - Search endpoint
      x-accepts: application/json
components:
  schemas:
    RestException:
      description: Payload for JSON error responses
      properties:
        timestamp:
          format: date-time
          type: string
        status:
          format: int32
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
      type: object
    ApplicationVersion:
      example:
        name: name
        description: description
        version: version
      properties:
        name:
          type: string
        version:
          type: string
        description:
          type: string
      type: object
    Association:
      example:
        ct: 9
        highlight: highlight
        relatedName: relatedName
        code: code
        relatedCode: relatedCode
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          readOnly: true
          type: string
        type:
          type: string
        relatedCode:
          type: string
        relatedName:
          type: string
        source:
          type: string
        highlight:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    Concept:
      example:
        associations:
        - ct: 9
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 9
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        code: code
        roles:
        - ct: 3
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 3
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        source: source
        descendants:
        - null
        - null
        highlight: highlight
        inverseRoles:
        - ct: 3
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 3
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        terminology: terminology
        children:
        - null
        - null
        conceptStatus: conceptStatus
        definitions:
        - ct: 5
          highlight: highlight
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          definition: definition
          source: source
          type: type
          uri: uri
        - ct: 5
          highlight: highlight
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          definition: definition
          source: source
          type: type
          uri: uri
        mapsetLink: mapsetLink
        maps:
        - targetName: targetName
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          type: type
          uri: uri
          targetTerminology: targetTerminology
          ct: 4
          sourceCode: sourceCode
          sourceTerminology: sourceTerminology
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        - targetName: targetName
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          type: type
          uri: uri
          targetTerminology: targetTerminology
          ct: 4
          sourceCode: sourceCode
          sourceTerminology: sourceTerminology
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        level: 6
        normName: normName
        synonyms:
        - code: code
          subSource: subSource
          normName: normName
          termType: termType
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          termGroup: termGroup
          typeCode: typeCode
          ct: 1
          highlight: highlight
          name: name
        - code: code
          subSource: subSource
          normName: normName
          termType: termType
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          termGroup: termGroup
          typeCode: typeCode
          ct: 1
          highlight: highlight
          name: name
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        history:
        - date: date
          ct: 2
          code: code
          replacementName: replacementName
          name: name
          action: action
          replacementCode: replacementCode
          uri: uri
        - date: date
          ct: 2
          code: code
          replacementName: replacementName
          name: name
          action: action
          replacementCode: replacementCode
          uri: uri
        leaf: true
        uri: uri
        version: version
        ct: 0
        inverseAssociations:
        - ct: 9
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 9
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        extensions:
          isSubtype: true
          ct: 7
          isDiseaseGrade: true
          isDiseaseStage: true
          isDisease: true
          isBiomarker: true
          isReferenceGene: true
          isMainType: true
          uri: uri
          mainMenuAncestors:
          - ct: 7
            paths:
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            uri: uri
          - ct: 7
            paths:
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            uri: uri
        highlights:
          key: highlights
        disjointWith:
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        - ct: 2
          highlight: highlight
          relatedName: relatedName
          code: code
          relatedCode: relatedCode
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
        paths:
          ct: 7
          paths:
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          uri: uri
        name: name
        subsetLink: subsetLink
        properties:
        - ct: 7
          highlight: highlight
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          value: value
        - ct: 7
          highlight: highlight
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          source: source
          type: type
          uri: uri
          value: value
        parents:
        - null
        - null
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          type: string
        name:
          type: string
        terminology:
          type: string
        version:
          type: string
        level:
          format: int32
          type: integer
        highlight:
          type: string
        highlights:
          additionalProperties:
            type: string
          type: object
        normName:
          readOnly: true
          type: string
        subsetLink:
          type: string
        mapsetLink:
          type: string
        conceptStatus:
          readOnly: true
          type: string
        source:
          type: string
        leaf:
          type: boolean
        synonyms:
          items:
            $ref: '#/components/schemas/Synonym'
          type: array
        definitions:
          items:
            $ref: '#/components/schemas/Definition'
          type: array
        history:
          items:
            $ref: '#/components/schemas/History'
          type: array
        properties:
          items:
            $ref: '#/components/schemas/Property'
          type: array
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        children:
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        parents:
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        descendants:
          items:
            $ref: '#/components/schemas/Concept'
          type: array
        associations:
          items:
            $ref: '#/components/schemas/Association'
          type: array
        inverseAssociations:
          items:
            $ref: '#/components/schemas/Association'
          type: array
        roles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        disjointWith:
          items:
            $ref: '#/components/schemas/DisjointWith'
          type: array
        inverseRoles:
          items:
            $ref: '#/components/schemas/Role'
          type: array
        maps:
          items:
            $ref: '#/components/schemas/Map'
          type: array
        paths:
          $ref: '#/components/schemas/Paths'
        extensions:
          $ref: '#/components/schemas/Extensions'
      type: object
    ConceptMinimal:
      example:
        ct: 1
        code: code
        terminology: terminology
        level: 6
        name: name
        uri: uri
        version: version
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          type: string
        name:
          type: string
        terminology:
          type: string
        version:
          type: string
        level:
          format: int32
          type: integer
      type: object
    Definition:
      example:
        ct: 5
        highlight: highlight
        code: code
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        definition: definition
        source: source
        type: type
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        definition:
          type: string
        highlight:
          type: string
        code:
          readOnly: true
          type: string
        type:
          type: string
        source:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    DisjointWith:
      example:
        ct: 2
        highlight: highlight
        relatedName: relatedName
        code: code
        relatedCode: relatedCode
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          readOnly: true
          type: string
        type:
          type: string
        relatedCode:
          type: string
        relatedName:
          type: string
        source:
          type: string
        highlight:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    Extensions:
      example:
        isSubtype: true
        ct: 7
        isDiseaseGrade: true
        isDiseaseStage: true
        isDisease: true
        isBiomarker: true
        isReferenceGene: true
        isMainType: true
        uri: uri
        mainMenuAncestors:
        - ct: 7
          paths:
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          uri: uri
        - ct: 7
          paths:
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          - ct: 1
            concepts:
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            - ct: 1
              code: code
              terminology: terminology
              level: 6
              name: name
              uri: uri
              version: version
            uri: uri
            direction: 1
          uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        isDisease:
          type: boolean
        isDiseaseGrade:
          type: boolean
        isDiseaseStage:
          type: boolean
        isMainType:
          type: boolean
        isSubtype:
          type: boolean
        isBiomarker:
          type: boolean
        isReferenceGene:
          type: boolean
        mainMenuAncestors:
          items:
            $ref: '#/components/schemas/Paths'
          type: array
      type: object
    History:
      example:
        date: date
        ct: 2
        code: code
        replacementName: replacementName
        name: name
        action: action
        replacementCode: replacementCode
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          type: string
        name:
          type: string
        action:
          type: string
        date:
          type: string
        replacementCode:
          type: string
        replacementName:
          type: string
      type: object
    Map:
      example:
        targetName: targetName
        targetCode: targetCode
        sourceTermType: sourceTermType
        rule: rule
        source: source
        type: type
        uri: uri
        targetTerminology: targetTerminology
        ct: 4
        sourceCode: sourceCode
        sourceTerminology: sourceTerminology
        rank: rank
        targetTerminologyVersion: targetTerminologyVersion
        sourceName: sourceName
        targetTermGroup: targetTermGroup
        group: group
        targetTermType: targetTermType
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        source:
          type: string
        sourceName:
          type: string
        sourceTermType:
          type: string
        sourceCode:
          type: string
        sourceTerminology:
          type: string
        type:
          type: string
        rank:
          type: string
        group:
          type: string
        rule:
          type: string
        targetName:
          type: string
        targetTermType:
          type: string
        targetCode:
          type: string
        targetTerminology:
          type: string
        targetTerminologyVersion:
          type: string
        targetTermGroup:
          type: string
          writeOnly: true
      type: object
    Path:
      example:
        ct: 1
        concepts:
        - ct: 1
          code: code
          terminology: terminology
          level: 6
          name: name
          uri: uri
          version: version
        - ct: 1
          code: code
          terminology: terminology
          level: 6
          name: name
          uri: uri
          version: version
        uri: uri
        direction: 1
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        direction:
          format: int32
          type: integer
        concepts:
          items:
            $ref: '#/components/schemas/ConceptMinimal'
          type: array
      type: object
    Paths:
      example:
        ct: 7
        paths:
        - ct: 1
          concepts:
          - ct: 1
            code: code
            terminology: terminology
            level: 6
            name: name
            uri: uri
            version: version
          - ct: 1
            code: code
            terminology: terminology
            level: 6
            name: name
            uri: uri
            version: version
          uri: uri
          direction: 1
        - ct: 1
          concepts:
          - ct: 1
            code: code
            terminology: terminology
            level: 6
            name: name
            uri: uri
            version: version
          - ct: 1
            code: code
            terminology: terminology
            level: 6
            name: name
            uri: uri
            version: version
          uri: uri
          direction: 1
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        paths:
          items:
            $ref: '#/components/schemas/Path'
          type: array
      type: object
    Property:
      example:
        ct: 7
        highlight: highlight
        code: code
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
        value: value
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          readOnly: true
          type: string
        type:
          type: string
        value:
          type: string
        highlight:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        source:
          type: string
      type: object
    Qualifier:
      example:
        ct: 5
        type: type
        uri: uri
        value: value
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        type:
          type: string
        value:
          type: string
      type: object
    Role:
      example:
        ct: 3
        highlight: highlight
        relatedName: relatedName
        code: code
        relatedCode: relatedCode
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          readOnly: true
          type: string
        type:
          type: string
        relatedCode:
          type: string
        relatedName:
          type: string
        source:
          type: string
        highlight:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
      type: object
    Synonym:
      example:
        code: code
        subSource: subSource
        normName: normName
        termType: termType
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        source: source
        type: type
        uri: uri
        termGroup: termGroup
        typeCode: typeCode
        ct: 1
        highlight: highlight
        name: name
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        name:
          type: string
        normName:
          readOnly: true
          type: string
        highlight:
          type: string
        termType:
          type: string
        type:
          type: string
        typeCode:
          readOnly: true
          type: string
        source:
          type: string
        code:
          type: string
        subSource:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        termGroup:
          type: string
          writeOnly: true
      type: object
    Terminology:
      example:
        date: date
        metadata:
          uiLabel: uiLabel
          subsetPrefix: subsetPrefix
          loader: loader
          preferredTermGroups:
          - preferredTermGroups
          - preferredTermGroups
          mapRelation: mapRelation
          synonymCode: synonymCode
          preferredTermTypes:
          - preferredTermTypes
          - preferredTermTypes
          retiredStatusValue: retiredStatusValue
          metaConceptField: metaConceptField
          preferredName: preferredName
          conceptStatus: conceptStatus
          mapTarget: mapTarget
          subsetMember:
          - subsetMember
          - subsetMember
          hierarchy: true
          history: true
          unpublished:
          - unpublished
          - unpublished
          synonymSource: synonymSource
          codeLabel: codeLabel
          definitionSourceSet:
          - definitionSourceSet
          - definitionSourceSet
          mapsets: true
          synonymTermGroup: synonymTermGroup
          code: code
          sources:
            key: sources
          licenseText: licenseText
          synonymSourceSet:
          - synonymSourceSet
          - synonymSourceSet
          maxVersions: 1
          detailsColumns:
            key: true
          synonym:
          - synonym
          - synonym
          termTypes:
            key: termTypes
          termGroups:
            key: termGroups
          mapTargetTerminology: mapTargetTerminology
          definition:
          - definition
          - definition
          map: map
          synonymTermType: synonymTermType
          relationshipToTarget: relationshipToTarget
          definitionSource: definitionSource
          welcomeText: welcomeText
          mapTargetTerminologyVersion: mapTargetTerminologyVersion
          uri: uri
          sourcesToRemove:
          - sourcesToRemove
          - sourcesToRemove
          ct: 6
          mapTargetTermGroup: mapTargetTermGroup
          mapTargetTermType: mapTargetTermType
          subsetLink: subsetLink
          sourceCt: 5
          monthlyDb: monthlyDb
          synonymSubSource: synonymSubSource
          conceptStatuses:
          - conceptStatuses
          - conceptStatuses
          subset:
          - subset
          - subset
        terminologyVersion: terminologyVersion
        indexName: indexName
        description: description
        source: source
        uri: uri
        version: version
        graph: graph
        tags:
          key: tags
        ct: 0
        terminology: terminology
        name: name
        sparqlFlag: true
        objectIndexName: objectIndexName
        latest: true
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        terminology:
          type: string
        version:
          type: string
        date:
          type: string
        name:
          type: string
        description:
          type: string
        graph:
          type: string
        source:
          type: string
        terminologyVersion:
          type: string
        latest:
          type: boolean
        tags:
          additionalProperties:
            type: string
          type: object
        indexName:
          type: string
        objectIndexName:
          type: string
        metadata:
          $ref: '#/components/schemas/TerminologyMetadata'
        sparqlFlag:
          type: boolean
      type: object
    TerminologyMetadata:
      example:
        uiLabel: uiLabel
        subsetPrefix: subsetPrefix
        loader: loader
        preferredTermGroups:
        - preferredTermGroups
        - preferredTermGroups
        mapRelation: mapRelation
        synonymCode: synonymCode
        preferredTermTypes:
        - preferredTermTypes
        - preferredTermTypes
        retiredStatusValue: retiredStatusValue
        metaConceptField: metaConceptField
        preferredName: preferredName
        conceptStatus: conceptStatus
        mapTarget: mapTarget
        subsetMember:
        - subsetMember
        - subsetMember
        hierarchy: true
        history: true
        unpublished:
        - unpublished
        - unpublished
        synonymSource: synonymSource
        codeLabel: codeLabel
        definitionSourceSet:
        - definitionSourceSet
        - definitionSourceSet
        mapsets: true
        synonymTermGroup: synonymTermGroup
        code: code
        sources:
          key: sources
        licenseText: licenseText
        synonymSourceSet:
        - synonymSourceSet
        - synonymSourceSet
        maxVersions: 1
        detailsColumns:
          key: true
        synonym:
        - synonym
        - synonym
        termTypes:
          key: termTypes
        termGroups:
          key: termGroups
        mapTargetTerminology: mapTargetTerminology
        definition:
        - definition
        - definition
        map: map
        synonymTermType: synonymTermType
        relationshipToTarget: relationshipToTarget
        definitionSource: definitionSource
        welcomeText: welcomeText
        mapTargetTerminologyVersion: mapTargetTerminologyVersion
        uri: uri
        sourcesToRemove:
        - sourcesToRemove
        - sourcesToRemove
        ct: 6
        mapTargetTermGroup: mapTargetTermGroup
        mapTargetTermType: mapTargetTermType
        subsetLink: subsetLink
        sourceCt: 5
        monthlyDb: monthlyDb
        synonymSubSource: synonymSubSource
        conceptStatuses:
        - conceptStatuses
        - conceptStatuses
        subset:
        - subset
        - subset
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        uiLabel:
          type: string
        maxVersions:
          format: int32
          type: integer
        loader:
          type: string
        code:
          type: string
        conceptStatus:
          type: string
        conceptStatuses:
          items:
            type: string
          type: array
        retiredStatusValue:
          type: string
        preferredName:
          type: string
        relationshipToTarget:
          type: string
        synonym:
          items:
            type: string
          type: array
          uniqueItems: true
        synonymTermType:
          type: string
        synonymSource:
          type: string
        synonymCode:
          type: string
        synonymSubSource:
          type: string
        definition:
          items:
            type: string
          type: array
          uniqueItems: true
        definitionSource:
          type: string
        mapRelation:
          type: string
        map:
          type: string
        mapTarget:
          type: string
        mapTargetTermType:
          type: string
        mapTargetTerminology:
          type: string
        mapTargetTerminologyVersion:
          type: string
        sources:
          additionalProperties:
            type: string
          type: object
        detailsColumns:
          additionalProperties:
            type: boolean
          type: object
        hierarchy:
          type: boolean
        history:
          type: boolean
        mapsets:
          type: boolean
        sourceCt:
          format: int32
          type: integer
        definitionSourceSet:
          items:
            type: string
          type: array
          uniqueItems: true
        synonymSourceSet:
          items:
            type: string
          type: array
          uniqueItems: true
        termTypes:
          additionalProperties:
            type: string
          type: object
        subsetPrefix:
          type: string
        subsetLink:
          type: string
        sourcesToRemove:
          items:
            type: string
          type: array
          uniqueItems: true
        subsetMember:
          items:
            type: string
          type: array
          uniqueItems: true
        unpublished:
          items:
            type: string
          type: array
          uniqueItems: true
        monthlyDb:
          type: string
        subset:
          items:
            type: string
          type: array
          uniqueItems: true
        licenseText:
          type: string
        metaConceptField:
          type: string
        preferredTermTypes:
          items:
            type: string
          type: array
        codeLabel:
          type: string
        welcomeText:
          type: string
        synonymTermGroup:
          type: string
          writeOnly: true
        mapTargetTermGroup:
          type: string
          writeOnly: true
        termGroups:
          additionalProperties:
            type: string
          type: object
          writeOnly: true
        preferredTermGroups:
          items:
            type: string
          type: array
          writeOnly: true
      type: object
    MapResultList:
      example:
        ct: 0
        timeTaken: 1
        total: 6
        maps:
        - targetName: targetName
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          type: type
          uri: uri
          targetTerminology: targetTerminology
          ct: 4
          sourceCode: sourceCode
          sourceTerminology: sourceTerminology
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        - targetName: targetName
          targetCode: targetCode
          sourceTermType: sourceTermType
          rule: rule
          source: source
          type: type
          uri: uri
          targetTerminology: targetTerminology
          ct: 4
          sourceCode: sourceCode
          sourceTerminology: sourceTerminology
          rank: rank
          targetTerminologyVersion: targetTerminologyVersion
          sourceName: sourceName
          targetTermGroup: targetTermGroup
          group: group
          targetTermType: targetTermType
        uri: uri
        parameters:
          include: include
          pageSize: 2
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 5
          sort: sort
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
        timeTaken:
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        maps:
          items:
            $ref: '#/components/schemas/Map'
          type: array
      type: object
    SearchCriteria:
      example:
        include: include
        pageSize: 2
        definitionSource:
        - definitionSource
        - definitionSource
        fromRecord: 5
        sort: sort
        type: type
        ascending: true
        uri: uri
        definitionType:
        - definitionType
        - definitionType
        ct: 5
        synonymSource:
        - synonymSource
        - synonymSource
        terminology:
        - terminology
        - terminology
        property:
        - property
        - property
        synonymType:
        - synonymType
        - synonymType
        term: term
        conceptStatus:
        - conceptStatus
        - conceptStatus
        value: value
        synonymTermType:
        - synonymTermType
        - synonymTermType
        subset:
        - subset
        - subset
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        term:
          type: string
        type:
          type: string
        include:
          type: string
        sort:
          type: string
        ascending:
          type: boolean
        fromRecord:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        conceptStatus:
          items:
            type: string
          type: array
        property:
          items:
            type: string
          type: array
        value:
          type: string
        synonymSource:
          items:
            type: string
          type: array
        synonymType:
          items:
            type: string
          type: array
        definitionSource:
          items:
            type: string
          type: array
        definitionType:
          items:
            type: string
          type: array
        synonymTermType:
          items:
            type: string
          type: array
        subset:
          items:
            type: string
          type: array
        terminology:
          items:
            type: string
          type: array
      type: object
    HierarchyNode:
      example:
        ct: 0
        highlight: true
        expanded: true
        code: code
        level: 6
        children:
        - null
        - null
        label: label
        leaf: true
        uri: uri
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          type: string
        label:
          type: string
        level:
          format: int32
          type: integer
        leaf:
          type: boolean
        expanded:
          type: boolean
        highlight:
          type: boolean
        children:
          items:
            $ref: '#/components/schemas/HierarchyNode'
          type: array
      type: object
    ConceptResultList:
      example:
        ct: 0
        timeTaken: 1
        total: 6
        concepts:
        - associations:
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          code: code
          roles:
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          source: source
          descendants:
          - null
          - null
          highlight: highlight
          inverseRoles:
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          terminology: terminology
          children:
          - null
          - null
          conceptStatus: conceptStatus
          definitions:
          - ct: 5
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          - ct: 5
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          mapsetLink: mapsetLink
          maps:
          - targetName: targetName
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            type: type
            uri: uri
            targetTerminology: targetTerminology
            ct: 4
            sourceCode: sourceCode
            sourceTerminology: sourceTerminology
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          - targetName: targetName
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            type: type
            uri: uri
            targetTerminology: targetTerminology
            ct: 4
            sourceCode: sourceCode
            sourceTerminology: sourceTerminology
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          level: 6
          normName: normName
          synonyms:
          - code: code
            subSource: subSource
            normName: normName
            termType: termType
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            termGroup: termGroup
            typeCode: typeCode
            ct: 1
            highlight: highlight
            name: name
          - code: code
            subSource: subSource
            normName: normName
            termType: termType
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            termGroup: termGroup
            typeCode: typeCode
            ct: 1
            highlight: highlight
            name: name
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          history:
          - date: date
            ct: 2
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          - date: date
            ct: 2
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          leaf: true
          uri: uri
          version: version
          ct: 0
          inverseAssociations:
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          extensions:
            isSubtype: true
            ct: 7
            isDiseaseGrade: true
            isDiseaseStage: true
            isDisease: true
            isBiomarker: true
            isReferenceGene: true
            isMainType: true
            uri: uri
            mainMenuAncestors:
            - ct: 7
              paths:
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              uri: uri
            - ct: 7
              paths:
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              uri: uri
          highlights:
            key: highlights
          disjointWith:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          paths:
            ct: 7
            paths:
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            uri: uri
          name: name
          subsetLink: subsetLink
          properties:
          - ct: 7
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          - ct: 7
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          parents:
          - null
          - null
        - associations:
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          code: code
          roles:
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          source: source
          descendants:
          - null
          - null
          highlight: highlight
          inverseRoles:
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 3
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          terminology: terminology
          children:
          - null
          - null
          conceptStatus: conceptStatus
          definitions:
          - ct: 5
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          - ct: 5
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            definition: definition
            source: source
            type: type
            uri: uri
          mapsetLink: mapsetLink
          maps:
          - targetName: targetName
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            type: type
            uri: uri
            targetTerminology: targetTerminology
            ct: 4
            sourceCode: sourceCode
            sourceTerminology: sourceTerminology
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          - targetName: targetName
            targetCode: targetCode
            sourceTermType: sourceTermType
            rule: rule
            source: source
            type: type
            uri: uri
            targetTerminology: targetTerminology
            ct: 4
            sourceCode: sourceCode
            sourceTerminology: sourceTerminology
            rank: rank
            targetTerminologyVersion: targetTerminologyVersion
            sourceName: sourceName
            targetTermGroup: targetTermGroup
            group: group
            targetTermType: targetTermType
          level: 6
          normName: normName
          synonyms:
          - code: code
            subSource: subSource
            normName: normName
            termType: termType
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            termGroup: termGroup
            typeCode: typeCode
            ct: 1
            highlight: highlight
            name: name
          - code: code
            subSource: subSource
            normName: normName
            termType: termType
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            termGroup: termGroup
            typeCode: typeCode
            ct: 1
            highlight: highlight
            name: name
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          history:
          - date: date
            ct: 2
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          - date: date
            ct: 2
            code: code
            replacementName: replacementName
            name: name
            action: action
            replacementCode: replacementCode
            uri: uri
          leaf: true
          uri: uri
          version: version
          ct: 0
          inverseAssociations:
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 9
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          extensions:
            isSubtype: true
            ct: 7
            isDiseaseGrade: true
            isDiseaseStage: true
            isDisease: true
            isBiomarker: true
            isReferenceGene: true
            isMainType: true
            uri: uri
            mainMenuAncestors:
            - ct: 7
              paths:
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              uri: uri
            - ct: 7
              paths:
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              - ct: 1
                concepts:
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                - ct: 1
                  code: code
                  terminology: terminology
                  level: 6
                  name: name
                  uri: uri
                  version: version
                uri: uri
                direction: 1
              uri: uri
          highlights:
            key: highlights
          disjointWith:
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          - ct: 2
            highlight: highlight
            relatedName: relatedName
            code: code
            relatedCode: relatedCode
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
          paths:
            ct: 7
            paths:
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            - ct: 1
              concepts:
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              - ct: 1
                code: code
                terminology: terminology
                level: 6
                name: name
                uri: uri
                version: version
              uri: uri
              direction: 1
            uri: uri
          name: name
          subsetLink: subsetLink
          properties:
          - ct: 7
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          - ct: 7
            highlight: highlight
            code: code
            qualifiers:
            - ct: 5
              type: type
              uri: uri
              value: value
            - ct: 5
              type: type
              uri: uri
              value: value
            source: source
            type: type
            uri: uri
            value: value
          parents:
          - null
          - null
        uri: uri
        parameters:
          include: include
          pageSize: 2
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 5
          sort: sort
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
        timeTaken:
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        concepts:
          items:
            $ref: '#/components/schemas/Concept'
          type: array
      type: object
    AssociationEntry:
      example:
        relatedName: relatedName
        code: code
        qualifiers:
        - ct: 5
          type: type
          uri: uri
          value: value
        - ct: 5
          type: type
          uri: uri
          value: value
        association: association
        source: source
        type: type
        uri: uri
        version: version
        ct: 5
        highlight: highlight
        terminology: terminology
        relatedCode: relatedCode
        name: name
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        code:
          type: string
        type:
          type: string
        relatedCode:
          type: string
        relatedName:
          type: string
        source:
          type: string
        highlight:
          type: string
        qualifiers:
          items:
            $ref: '#/components/schemas/Qualifier'
          type: array
        terminology:
          type: string
        version:
          type: string
        association:
          type: string
        name:
          type: string
      type: object
    AssociationEntryResultList:
      example:
        ct: 0
        timeTaken: 1
        total: 6
        associationEntries:
        - relatedName: relatedName
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          association: association
          source: source
          type: type
          uri: uri
          version: version
          ct: 5
          highlight: highlight
          terminology: terminology
          relatedCode: relatedCode
          name: name
        - relatedName: relatedName
          code: code
          qualifiers:
          - ct: 5
            type: type
            uri: uri
            value: value
          - ct: 5
            type: type
            uri: uri
            value: value
          association: association
          source: source
          type: type
          uri: uri
          version: version
          ct: 5
          highlight: highlight
          terminology: terminology
          relatedCode: relatedCode
          name: name
        uri: uri
        parameters:
          include: include
          pageSize: 2
          definitionSource:
          - definitionSource
          - definitionSource
          fromRecord: 5
          sort: sort
          type: type
          ascending: true
          uri: uri
          definitionType:
          - definitionType
          - definitionType
          ct: 5
          synonymSource:
          - synonymSource
          - synonymSource
          terminology:
          - terminology
          - terminology
          property:
          - property
          - property
          synonymType:
          - synonymType
          - synonymType
          term: term
          conceptStatus:
          - conceptStatus
          - conceptStatus
          value: value
          synonymTermType:
          - synonymTermType
          - synonymTermType
          subset:
          - subset
          - subset
      properties:
        uri:
          type: string
        ct:
          format: int32
          type: integer
        total:
          format: int32
          type: integer
        timeTaken:
          format: int64
          type: integer
        parameters:
          $ref: '#/components/schemas/SearchCriteria'
        associationEntries:
          items:
            $ref: '#/components/schemas/AssociationEntry'
          type: array
      type: object

